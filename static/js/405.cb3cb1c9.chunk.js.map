{"version":3,"file":"static/js/405.cb3cb1c9.chunk.js","mappings":"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","sources":["../node_modules/@emotion/css/node_modules/@emotion/sheet/dist/emotion-sheet.esm.js","../node_modules/stylis/src/Utility.js","../node_modules/stylis/src/Tokenizer.js","../node_modules/stylis/src/Enum.js","../node_modules/stylis/src/Serializer.js","../node_modules/stylis/src/Parser.js","../node_modules/@emotion/css/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js","../node_modules/stylis/src/Middleware.js","../node_modules/@emotion/css/node_modules/@emotion/unitless/dist/emotion-unitless.esm.js","../node_modules/@emotion/css/node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","../node_modules/@emotion/css/node_modules/@emotion/serialize/dist/emotion-serialize.esm.js","../node_modules/@emotion/css/node_modules/@emotion/hash/dist/emotion-hash.esm.js","../node_modules/@emotion/css/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","../node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js","../node_modules/react-diff-viewer-continued/lib/src/compute-hidden-blocks.js","../node_modules/react-diff-viewer-continued/lib/src/compute-lines.js","../node_modules/react-diff-viewer-continued/lib/src/index.js","../node_modules/react-diff-viewer-continued/lib/src/styles.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/convert/dmp.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/convert/xml.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/diff/array.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/diff/base.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/diff/character.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/diff/css.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/diff/json.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/diff/line.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/diff/sentence.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/diff/word.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/index.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/patch/apply.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/patch/create.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/patch/merge.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/patch/parse.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/patch/reverse.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/util/array.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/util/distance-iterator.js","../node_modules/react-diff-viewer-continued/node_modules/diff/src/util/params.js","../node_modules/react-diff-viewer-continued/node_modules/memoize-one/dist/memoize-one.esm.js","../node_modules/classnames/index.js"],"sourcesContent":["var isDevelopment = false;\n\n/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      return document.styleSheets[i];\n    }\n  } // this function should always return with a value\n  // TS can't understand it though so we make it stop complaining here\n\n\n  return undefined;\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? !isDevelopment : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    this.tags.forEach(function (tag) {\n      var _tag$parentNode;\n\n      return (_tag$parentNode = tag.parentNode) == null ? void 0 : _tag$parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\nexport var LAYER = '@layer'\n","import {IMPORT, LAYER, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase LAYER: if (element.children.length) break\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d l m s\n\t\t\t\t\t\t\t\t\tcase 100: case 108: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, RULESET, combine, match, serialize, copy, replace, WEBKIT, MOZ, MS, KEYFRAMES, DECLARATION, hash, charat, strlen, indexof, stringify, rulesheet, middleware, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value;\n  var parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\n\n/* eslint-disable no-fallthrough */\n\nfunction prefix(value, length) {\n  switch (hash(value, length)) {\n    // color-adjust\n    case 5103:\n      return WEBKIT + 'print-' + value + value;\n    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return WEBKIT + value + value;\n    // appearance, user-select, transform, hyphens, text-size-adjust\n\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return WEBKIT + value + MOZ + value + MS + value + value;\n    // flex, flex-direction\n\n    case 6828:\n    case 4268:\n      return WEBKIT + value + MS + value + value;\n    // order\n\n    case 6165:\n      return WEBKIT + value + MS + 'flex-' + value + value;\n    // align-items\n\n    case 5187:\n      return WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;\n    // align-self\n\n    case 5443:\n      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;\n    // align-content\n\n    case 4675:\n      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;\n    // flex-shrink\n\n    case 5548:\n      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;\n    // flex-basis\n\n    case 5292:\n      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;\n    // flex-grow\n\n    case 6060:\n      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;\n    // transition\n\n    case 4554:\n      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;\n    // cursor\n\n    case 6187:\n      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;\n    // background, background-image\n\n    case 5495:\n    case 3959:\n      return replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1');\n    // justify-content\n\n    case 4968:\n      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;\n    // (margin|padding)-inline-(start|end)\n\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;\n    // (min|max)?(width|height|inline-size|block-size)\n\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      // stretch, max-content, min-content, fill-available\n      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {\n        // (m)ax-content, (m)in-content\n        case 109:\n          // -\n          if (charat(value, length + 4) !== 45) break;\n        // (f)ill-available, (f)it-content\n\n        case 102:\n          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;\n        // (s)tretch\n\n        case 115:\n          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;\n      }\n      break;\n    // position: sticky\n\n    case 4949:\n      // (s)ticky?\n      if (charat(value, length + 1) !== 115) break;\n    // display: (flex|inline-flex)\n\n    case 6444:\n      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n        // stic(k)y\n        case 107:\n          return replace(value, ':', ':' + WEBKIT) + value;\n        // (inline-)?fl(e)x\n\n        case 101:\n          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;\n      }\n\n      break;\n    // writing-mode\n\n    case 5936:\n      switch (charat(value, length + 11)) {\n        // vertical-l(r)\n        case 114:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value;\n        // vertical-r(l)\n\n        case 108:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value;\n        // horizontal(-)tb\n\n        case 45:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value;\n      }\n\n      return WEBKIT + value + MS + value + value;\n  }\n\n  return value;\n}\n\nvar prefixer = function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element[\"return\"]) switch (element.type) {\n    case DECLARATION:\n      element[\"return\"] = prefix(element.value, element.length);\n      break;\n\n    case KEYFRAMES:\n      return serialize([copy(element, {\n        value: replace(element.value, '@', '@' + WEBKIT)\n      })], callback);\n\n    case RULESET:\n      if (element.length) return combine(element.props, function (value) {\n        switch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return serialize([copy(element, {\n              props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return serialize([copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' ');\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport { createCache as default };\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  aspectRatio: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  scale: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport { unitlessKeys as default };\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport { memoize as default };\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar isDevelopment = false;\n\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  var componentSelector = interpolation;\n\n  if (componentSelector.__emotion_styles !== undefined) {\n\n    return componentSelector;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        var keyframes = interpolation;\n\n        if (keyframes.anim === 1) {\n          cursor = {\n            name: keyframes.name,\n            styles: keyframes.styles,\n            next: cursor\n          };\n          return keyframes.name;\n        }\n\n        var serializedStyles = interpolation;\n\n        if (serializedStyles.styles !== undefined) {\n          var next = serializedStyles.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = serializedStyles.styles + \";\";\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        }\n\n        break;\n      }\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  var asString = interpolation;\n\n  if (registered == null) {\n    return asString;\n  }\n\n  var cached = registered[asString];\n  return cached !== undefined ? cached : asString;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var key in obj) {\n      var value = obj[key];\n\n      if (typeof value !== 'object') {\n        var asString = value;\n\n        if (registered != null && registered[asString] !== undefined) {\n          string += key + \"{\" + registered[asString] + \"}\";\n        } else if (isProcessableValue(asString)) {\n          string += processStyleName(key) + \":\" + processStyleValue(key, asString) + \";\";\n        }\n      } else {\n        if (key === 'NO_COMPONENT_SELECTOR' && isDevelopment) {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(key) + \":\" + processStyleValue(key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n\n                string += key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;{]+)\\s*(;|$)/g; // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\nvar cursor;\nfunction serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    var asTemplateStringsArr = strings;\n\n    styles += asTemplateStringsArr[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      var templateStringsArr = strings;\n\n      styles += templateStringsArr[i];\n    }\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n}\n\nexport { serializeStyles };\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport { murmur2 as default };\n","var isBrowser = true;\n\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else if (className) {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options);\n\n  cache.sheet.speedy = function (value) {\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport { createEmotion as default };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeHiddenBlocks = void 0;\nfunction computeHiddenBlocks(lineInformation, diffLines, extraLines) {\n    let newBlockIndex = 0;\n    let currentBlock;\n    let lineBlocks = {};\n    let blocks = [];\n    lineInformation.forEach((line, lineIndex) => {\n        const isDiffLine = diffLines.some(diffLine => diffLine >= lineIndex - extraLines && diffLine <= lineIndex + extraLines);\n        if (!isDiffLine && currentBlock == undefined) {\n            // block begins\n            currentBlock = {\n                index: newBlockIndex,\n                startLine: lineIndex,\n                endLine: lineIndex,\n                lines: 1\n            };\n            blocks.push(currentBlock);\n            lineBlocks[lineIndex] = currentBlock.index;\n            newBlockIndex++;\n        }\n        else if (!isDiffLine) {\n            // block continues\n            currentBlock.endLine = lineIndex;\n            currentBlock.lines++;\n            lineBlocks[lineIndex] = currentBlock.index;\n        }\n        else {\n            // not a block anymore\n            currentBlock = undefined;\n        }\n    });\n    return {\n        lineBlocks,\n        blocks: blocks\n    };\n}\nexports.computeHiddenBlocks = computeHiddenBlocks;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeLineInformation = exports.DiffMethod = exports.DiffType = void 0;\nconst diff = __importStar(require(\"diff\"));\nconst jsDiff = diff;\nvar DiffType;\n(function (DiffType) {\n    DiffType[DiffType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    DiffType[DiffType[\"ADDED\"] = 1] = \"ADDED\";\n    DiffType[DiffType[\"REMOVED\"] = 2] = \"REMOVED\";\n    DiffType[DiffType[\"CHANGED\"] = 3] = \"CHANGED\";\n})(DiffType || (exports.DiffType = DiffType = {}));\n// See https://github.com/kpdecker/jsdiff/tree/v4.0.1#api for more info on the below JsDiff methods\nvar DiffMethod;\n(function (DiffMethod) {\n    DiffMethod[\"CHARS\"] = \"diffChars\";\n    DiffMethod[\"WORDS\"] = \"diffWords\";\n    DiffMethod[\"WORDS_WITH_SPACE\"] = \"diffWordsWithSpace\";\n    DiffMethod[\"LINES\"] = \"diffLines\";\n    DiffMethod[\"TRIMMED_LINES\"] = \"diffTrimmedLines\";\n    DiffMethod[\"SENTENCES\"] = \"diffSentences\";\n    DiffMethod[\"CSS\"] = \"diffCss\";\n    DiffMethod[\"JSON\"] = \"diffJson\";\n})(DiffMethod || (exports.DiffMethod = DiffMethod = {}));\n/**\n * Splits diff text by new line and computes final list of diff lines based on\n * conditions.\n *\n * @param value Diff text from the js diff module.\n */\nconst constructLines = (value) => {\n    if (value === '')\n        return [];\n    const lines = value.replace(/\\n$/, '').split('\\n');\n    return lines;\n};\n/**\n * Computes word diff information in the line.\n * [TODO]: Consider adding options argument for JsDiff text block comparison\n *\n * @param oldValue Old word in the line.\n * @param newValue New word in the line.\n * @param compareMethod JsDiff text diff method from https://github.com/kpdecker/jsdiff/tree/v4.0.1#api\n */\nconst computeDiff = (oldValue, newValue, compareMethod = DiffMethod.CHARS) => {\n    const diffArray = jsDiff[compareMethod](oldValue, newValue);\n    const computedDiff = {\n        left: [],\n        right: [],\n    };\n    diffArray.forEach(({ added, removed, value }) => {\n        const diffInformation = {};\n        if (added) {\n            diffInformation.type = DiffType.ADDED;\n            diffInformation.value = value;\n            computedDiff.right.push(diffInformation);\n        }\n        if (removed) {\n            diffInformation.type = DiffType.REMOVED;\n            diffInformation.value = value;\n            computedDiff.left.push(diffInformation);\n        }\n        if (!removed && !added) {\n            diffInformation.type = DiffType.DEFAULT;\n            diffInformation.value = value;\n            computedDiff.right.push(diffInformation);\n            computedDiff.left.push(diffInformation);\n        }\n        return diffInformation;\n    });\n    return computedDiff;\n};\n/**\n * [TODO]: Think about moving common left and right value assignment to a\n * common place. Better readability?\n *\n * Computes line wise information based in the js diff information passed. Each\n * line contains information about left and right section. Left side denotes\n * deletion and right side denotes addition.\n *\n * @param oldString Old string to compare.\n * @param newString New string to compare with old string.\n * @param disableWordDiff Flag to enable/disable word diff.\n * @param lineCompareMethod JsDiff text diff method from https://github.com/kpdecker/jsdiff/tree/v4.0.1#api\n * @param linesOffset line number to start counting from\n * @param showLines lines that are always shown, regardless of diff\n */\nconst computeLineInformation = (oldString, newString, disableWordDiff = false, lineCompareMethod = DiffMethod.CHARS, linesOffset = 0, showLines = []) => {\n    let diffArray = [];\n    // Use diffLines for strings, and diffJson for objects...\n    if (typeof oldString === 'string' && typeof newString === 'string') {\n        diffArray = diff.diffLines(oldString.trimRight(), newString.trimRight(), {\n            newlineIsToken: false,\n            ignoreWhitespace: false,\n            ignoreCase: false,\n        });\n    }\n    else {\n        diffArray = diff.diffJson(oldString, newString);\n    }\n    let rightLineNumber = linesOffset;\n    let leftLineNumber = linesOffset;\n    let lineInformation = [];\n    let counter = 0;\n    const diffLines = [];\n    const ignoreDiffIndexes = [];\n    const getLineInformation = (value, diffIndex, added, removed, evaluateOnlyFirstLine) => {\n        const lines = constructLines(value);\n        return lines\n            .map((line, lineIndex) => {\n            const left = {};\n            const right = {};\n            if (ignoreDiffIndexes.includes(`${diffIndex}-${lineIndex}`) ||\n                (evaluateOnlyFirstLine && lineIndex !== 0)) {\n                return undefined;\n            }\n            if (added || removed) {\n                let countAsChange = true;\n                if (removed) {\n                    leftLineNumber += 1;\n                    left.lineNumber = leftLineNumber;\n                    left.type = DiffType.REMOVED;\n                    left.value = line || ' ';\n                    // When the current line is of type REMOVED, check the next item in\n                    // the diff array whether it is of type ADDED. If true, the current\n                    // diff will be marked as both REMOVED and ADDED. Meaning, the\n                    // current line is a modification.\n                    const nextDiff = diffArray[diffIndex + 1];\n                    if (nextDiff && nextDiff.added) {\n                        const nextDiffLines = constructLines(nextDiff.value)[lineIndex];\n                        if (nextDiffLines) {\n                            const nextDiffLineInfo = getLineInformation(nextDiffLines, diffIndex, true, false, true);\n                            const { value: rightValue, lineNumber, type, } = nextDiffLineInfo[0].right;\n                            // When identified as modification, push the next diff to ignore\n                            // list as the next value will be added in this line computation as\n                            // right and left values.\n                            ignoreDiffIndexes.push(`${diffIndex + 1}-${lineIndex}`);\n                            right.lineNumber = lineNumber;\n                            if (left.value === rightValue) {\n                                // The new value is exactly the same as the old\n                                countAsChange = false;\n                                right.type = 0;\n                                left.type = 0;\n                                right.value = rightValue;\n                            }\n                            else {\n                                right.type = type;\n                                // Do char level diff and assign the corresponding values to the\n                                // left and right diff information object.\n                                if (disableWordDiff) {\n                                    right.value = rightValue;\n                                }\n                                else {\n                                    const computedDiff = computeDiff(line, rightValue, lineCompareMethod);\n                                    right.value = computedDiff.right;\n                                    left.value = computedDiff.left;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    rightLineNumber += 1;\n                    right.lineNumber = rightLineNumber;\n                    right.type = DiffType.ADDED;\n                    right.value = line;\n                }\n                if (countAsChange && !evaluateOnlyFirstLine) {\n                    if (!diffLines.includes(counter)) {\n                        diffLines.push(counter);\n                    }\n                }\n            }\n            else {\n                leftLineNumber += 1;\n                rightLineNumber += 1;\n                left.lineNumber = leftLineNumber;\n                left.type = DiffType.DEFAULT;\n                left.value = line;\n                right.lineNumber = rightLineNumber;\n                right.type = DiffType.DEFAULT;\n                right.value = line;\n            }\n            if ((showLines === null || showLines === void 0 ? void 0 : showLines.includes(`L-${left.lineNumber}`)) || (showLines === null || showLines === void 0 ? void 0 : showLines.includes(`R-${right.lineNumber}`)) && !diffLines.includes(counter)) {\n                diffLines.push(counter);\n            }\n            if (!evaluateOnlyFirstLine) {\n                counter += 1;\n            }\n            return { right, left };\n        })\n            .filter(Boolean);\n    };\n    diffArray.forEach(({ added, removed, value }, index) => {\n        lineInformation = [\n            ...lineInformation,\n            ...getLineInformation(value, index, added, removed),\n        ];\n    });\n    return {\n        lineInformation,\n        diffLines,\n    };\n};\nexports.computeLineInformation = computeLineInformation;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiffMethod = exports.LineNumberPrefix = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst React = __importStar(require(\"react\"));\nconst classnames_1 = __importDefault(require(\"classnames\"));\nconst compute_lines_1 = require(\"./compute-lines\");\nObject.defineProperty(exports, \"DiffMethod\", { enumerable: true, get: function () { return compute_lines_1.DiffMethod; } });\nconst styles_1 = __importDefault(require(\"./styles\"));\nconst compute_hidden_blocks_1 = require(\"./compute-hidden-blocks\");\nconst m = require('memoize-one');\nconst memoize = m.default || m;\nvar LineNumberPrefix;\n(function (LineNumberPrefix) {\n    LineNumberPrefix[\"LEFT\"] = \"L\";\n    LineNumberPrefix[\"RIGHT\"] = \"R\";\n})(LineNumberPrefix || (exports.LineNumberPrefix = LineNumberPrefix = {}));\nclass DiffViewer extends React.Component {\n    constructor(props) {\n        super(props);\n        /**\n         * Resets code block expand to the initial stage. Will be exposed to the parent component via\n         * refs.\n         */\n        this.resetCodeBlocks = () => {\n            if (this.state.expandedBlocks.length > 0) {\n                this.setState({\n                    expandedBlocks: [],\n                });\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Pushes the target expanded code block to the state. During the re-render,\n         * this value is used to expand/fold unmodified code.\n         */\n        this.onBlockExpand = (id) => {\n            const prevState = this.state.expandedBlocks.slice();\n            prevState.push(id);\n            this.setState({\n                expandedBlocks: prevState,\n            });\n        };\n        /**\n         * Computes final styles for the diff viewer. It combines the default styles with the user\n         * supplied overrides. The computed styles are cached with performance in mind.\n         *\n         * @param styles User supplied style overrides.\n         */\n        this.computeStyles = memoize(styles_1.default);\n        /**\n         * Returns a function with clicked line number in the closure. Returns an no-op function when no\n         * onLineNumberClick handler is supplied.\n         *\n         * @param id Line id of a line.\n         */\n        this.onLineNumberClickProxy = (id) => {\n            if (this.props.onLineNumberClick) {\n                return (e) => this.props.onLineNumberClick(id, e);\n            }\n            return () => { };\n        };\n        /**\n         * Maps over the word diff and constructs the required React elements to show word diff.\n         *\n         * @param diffArray Word diff information derived from line information.\n         * @param renderer Optional renderer to format diff words. Useful for syntax highlighting.\n         */\n        this.renderWordDiff = (diffArray, renderer) => {\n            return diffArray.map((wordDiff, i) => {\n                return ((0, jsx_runtime_1.jsx)(\"span\", { className: (0, classnames_1.default)(this.styles.wordDiff, {\n                        [this.styles.wordAdded]: wordDiff.type === compute_lines_1.DiffType.ADDED,\n                        [this.styles.wordRemoved]: wordDiff.type === compute_lines_1.DiffType.REMOVED,\n                    }), children: renderer ? renderer(wordDiff.value) : wordDiff.value }, i));\n            });\n        };\n        /**\n         * Maps over the line diff and constructs the required react elements to show line diff. It calls\n         * renderWordDiff when encountering word diff. This takes care of both inline and split view line\n         * renders.\n         *\n         * @param lineNumber Line number of the current line.\n         * @param type Type of diff of the current line.\n         * @param prefix Unique id to prefix with the line numbers.\n         * @param value Content of the line. It can be a string or a word diff array.\n         * @param additionalLineNumber Additional line number to be shown. Useful for rendering inline\n         *  diff view. Right line number will be passed as additionalLineNumber.\n         * @param additionalPrefix Similar to prefix but for additional line number.\n         */\n        this.renderLine = (lineNumber, type, prefix, value, additionalLineNumber, additionalPrefix) => {\n            const lineNumberTemplate = `${prefix}-${lineNumber}`;\n            const additionalLineNumberTemplate = `${additionalPrefix}-${additionalLineNumber}`;\n            const highlightLine = this.props.highlightLines.includes(lineNumberTemplate) ||\n                this.props.highlightLines.includes(additionalLineNumberTemplate);\n            const added = type === compute_lines_1.DiffType.ADDED;\n            const removed = type === compute_lines_1.DiffType.REMOVED;\n            const changed = type === compute_lines_1.DiffType.CHANGED;\n            let content;\n            if (Array.isArray(value)) {\n                content = this.renderWordDiff(value, this.props.renderContent);\n            }\n            else if (this.props.renderContent) {\n                content = this.props.renderContent(value);\n            }\n            else {\n                content = value;\n            }\n            return ((0, jsx_runtime_1.jsxs)(React.Fragment, { children: [!this.props.hideLineNumbers && ((0, jsx_runtime_1.jsx)(\"td\", { onClick: lineNumber && this.onLineNumberClickProxy(lineNumberTemplate), className: (0, classnames_1.default)(this.styles.gutter, {\n                            [this.styles.emptyGutter]: !lineNumber,\n                            [this.styles.diffAdded]: added,\n                            [this.styles.diffRemoved]: removed,\n                            [this.styles.diffChanged]: changed,\n                            [this.styles.highlightedGutter]: highlightLine,\n                        }), children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.lineNumber, children: lineNumber }) })), !this.props.splitView && !this.props.hideLineNumbers && ((0, jsx_runtime_1.jsx)(\"td\", { onClick: additionalLineNumber &&\n                            this.onLineNumberClickProxy(additionalLineNumberTemplate), className: (0, classnames_1.default)(this.styles.gutter, {\n                            [this.styles.emptyGutter]: !additionalLineNumber,\n                            [this.styles.diffAdded]: added,\n                            [this.styles.diffRemoved]: removed,\n                            [this.styles.diffChanged]: changed,\n                            [this.styles.highlightedGutter]: highlightLine,\n                        }), children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.lineNumber, children: additionalLineNumber }) })), this.props.renderGutter\n                        ? this.props.renderGutter({\n                            lineNumber,\n                            type,\n                            prefix,\n                            value,\n                            additionalLineNumber,\n                            additionalPrefix,\n                            styles: this.styles,\n                        })\n                        : null, !this.props.hideMarkers && ((0, jsx_runtime_1.jsx)(\"td\", { className: (0, classnames_1.default)(this.styles.marker, {\n                            [this.styles.emptyLine]: !content,\n                            [this.styles.diffAdded]: added,\n                            [this.styles.diffRemoved]: removed,\n                            [this.styles.diffChanged]: changed,\n                            [this.styles.highlightedLine]: highlightLine,\n                        }), children: (0, jsx_runtime_1.jsxs)(\"pre\", { children: [added && '+', removed && '-'] }) })), (0, jsx_runtime_1.jsx)(\"td\", { className: (0, classnames_1.default)(this.styles.content, {\n                            [this.styles.emptyLine]: !content,\n                            [this.styles.diffAdded]: added,\n                            [this.styles.diffRemoved]: removed,\n                            [this.styles.diffChanged]: changed,\n                            [this.styles.highlightedLine]: highlightLine,\n                        }), children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.contentText, children: content }) })] }));\n        };\n        /**\n         * Generates lines for split view.\n         *\n         * @param obj Line diff information.\n         * @param obj.left Life diff information for the left pane of the split view.\n         * @param obj.right Life diff information for the right pane of the split view.\n         * @param index React key for the lines.\n         */\n        this.renderSplitView = ({ left, right }, index) => {\n            return ((0, jsx_runtime_1.jsxs)(\"tr\", { className: this.styles.line, children: [this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value), this.renderLine(right.lineNumber, right.type, LineNumberPrefix.RIGHT, right.value)] }, index));\n        };\n        /**\n         * Generates lines for inline view.\n         *\n         * @param obj Line diff information.\n         * @param obj.left Life diff information for the added section of the inline view.\n         * @param obj.right Life diff information for the removed section of the inline view.\n         * @param index React key for the lines.\n         */\n        this.renderInlineView = ({ left, right }, index) => {\n            let content;\n            if (left.type === compute_lines_1.DiffType.REMOVED && right.type === compute_lines_1.DiffType.ADDED) {\n                return ((0, jsx_runtime_1.jsxs)(React.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"tr\", { className: this.styles.line, children: this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, null) }), (0, jsx_runtime_1.jsx)(\"tr\", { className: this.styles.line, children: this.renderLine(null, right.type, LineNumberPrefix.RIGHT, right.value, right.lineNumber) })] }, index));\n            }\n            if (left.type === compute_lines_1.DiffType.REMOVED) {\n                content = this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, null);\n            }\n            if (left.type === compute_lines_1.DiffType.DEFAULT) {\n                content = this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, right.lineNumber, LineNumberPrefix.RIGHT);\n            }\n            if (right.type === compute_lines_1.DiffType.ADDED) {\n                content = this.renderLine(null, right.type, LineNumberPrefix.RIGHT, right.value, right.lineNumber);\n            }\n            return ((0, jsx_runtime_1.jsx)(\"tr\", { className: this.styles.line, children: content }, index));\n        };\n        /**\n         * Returns a function with clicked block number in the closure.\n         *\n         * @param id Cold fold block id.\n         */\n        this.onBlockClickProxy = (id) => () => this.onBlockExpand(id);\n        /**\n         * Generates cold fold block. It also uses the custom message renderer when available to show\n         * cold fold messages.\n         *\n         * @param num Number of skipped lines between two blocks.\n         * @param blockNumber Code fold block id.\n         * @param leftBlockLineNumber First left line number after the current code fold block.\n         * @param rightBlockLineNumber First right line number after the current code fold block.\n         */\n        this.renderSkippedLineIndicator = (num, blockNumber, leftBlockLineNumber, rightBlockLineNumber) => {\n            const { hideLineNumbers, splitView } = this.props;\n            const message = this.props.codeFoldMessageRenderer ? (this.props.codeFoldMessageRenderer(num, leftBlockLineNumber, rightBlockLineNumber)) : ((0, jsx_runtime_1.jsxs)(\"pre\", { className: this.styles.codeFoldContent, children: [\"Expand \", num, \" lines ...\"] }));\n            const content = ((0, jsx_runtime_1.jsx)(\"td\", { children: (0, jsx_runtime_1.jsx)(\"a\", { onClick: this.onBlockClickProxy(blockNumber), tabIndex: 0, children: message }) }));\n            const isUnifiedViewWithoutLineNumbers = !splitView && !hideLineNumbers;\n            return ((0, jsx_runtime_1.jsxs)(\"tr\", { className: this.styles.codeFold, children: [!hideLineNumbers && (0, jsx_runtime_1.jsx)(\"td\", { className: this.styles.codeFoldGutter }), this.props.renderGutter ? ((0, jsx_runtime_1.jsx)(\"td\", { className: this.styles.codeFoldGutter })) : null, (0, jsx_runtime_1.jsx)(\"td\", { className: (0, classnames_1.default)({\n                            [this.styles.codeFoldGutter]: isUnifiedViewWithoutLineNumbers,\n                        }) }), isUnifiedViewWithoutLineNumbers ? ((0, jsx_runtime_1.jsxs)(React.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"td\", {}), content] })) : ((0, jsx_runtime_1.jsxs)(React.Fragment, { children: [content, this.props.renderGutter ? (0, jsx_runtime_1.jsx)(\"td\", {}) : null, (0, jsx_runtime_1.jsx)(\"td\", {})] })), (0, jsx_runtime_1.jsx)(\"td\", {}), (0, jsx_runtime_1.jsx)(\"td\", {})] }, `${leftBlockLineNumber}-${rightBlockLineNumber}`));\n        };\n        /**\n         * Generates the entire diff view.\n         */\n        this.renderDiff = () => {\n            const { oldValue, newValue, splitView, disableWordDiff, compareMethod, linesOffset, } = this.props;\n            const { lineInformation, diffLines } = (0, compute_lines_1.computeLineInformation)(oldValue, newValue, disableWordDiff, compareMethod, linesOffset, this.props.alwaysShowLines);\n            const extraLines = this.props.extraLinesSurroundingDiff < 0\n                ? 0\n                : Math.round(this.props.extraLinesSurroundingDiff);\n            const { lineBlocks, blocks } = (0, compute_hidden_blocks_1.computeHiddenBlocks)(lineInformation, diffLines, extraLines);\n            return lineInformation.map((line, lineIndex) => {\n                if (this.props.showDiffOnly) {\n                    const blockIndex = lineBlocks[lineIndex];\n                    if (blockIndex !== undefined) {\n                        const lastLineOfBlock = blocks[blockIndex].endLine === lineIndex;\n                        if (!this.state.expandedBlocks.includes(blockIndex) && lastLineOfBlock) {\n                            return ((0, jsx_runtime_1.jsx)(React.Fragment, { children: this.renderSkippedLineIndicator(blocks[blockIndex].lines, blockIndex, line.left.lineNumber, line.right.lineNumber) }, lineIndex));\n                        }\n                        else if (!this.state.expandedBlocks.includes(blockIndex)) {\n                            return null;\n                        }\n                    }\n                }\n                const diffNodes = splitView\n                    ? this.renderSplitView(line, lineIndex)\n                    : this.renderInlineView(line, lineIndex);\n                return diffNodes;\n            });\n        };\n        this.render = () => {\n            const { oldValue, newValue, useDarkTheme, leftTitle, rightTitle, splitView, hideLineNumbers, hideMarkers, nonce, } = this.props;\n            if (this.props.compareMethod !== compute_lines_1.DiffMethod.JSON) {\n                if (typeof oldValue !== 'string' || typeof newValue !== 'string') {\n                    throw Error('\"oldValue\" and \"newValue\" should be strings');\n                }\n            }\n            this.styles = this.computeStyles(this.props.styles, useDarkTheme, nonce);\n            const nodes = this.renderDiff();\n            let colSpanOnSplitView = hideLineNumbers ? 2 : 3;\n            let colSpanOnInlineView = hideLineNumbers ? 2 : 4;\n            if (hideMarkers) {\n                colSpanOnSplitView -= 1;\n                colSpanOnInlineView -= 1;\n            }\n            const columnExtension = this.props.renderGutter ? 1 : 0;\n            const title = (leftTitle || rightTitle) && ((0, jsx_runtime_1.jsxs)(\"tr\", { children: [(0, jsx_runtime_1.jsx)(\"td\", { colSpan: (splitView ? colSpanOnSplitView : colSpanOnInlineView) +\n                            columnExtension, className: this.styles.titleBlock, children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.contentText, children: leftTitle }) }), splitView && ((0, jsx_runtime_1.jsx)(\"td\", { colSpan: colSpanOnSplitView + columnExtension, className: this.styles.titleBlock, children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.contentText, children: rightTitle }) }))] }));\n            return ((0, jsx_runtime_1.jsx)(\"table\", { className: (0, classnames_1.default)(this.styles.diffContainer, {\n                    [this.styles.splitView]: splitView,\n                }), children: (0, jsx_runtime_1.jsxs)(\"tbody\", { children: [title, nodes] }) }));\n        };\n        this.state = {\n            expandedBlocks: [],\n        };\n    }\n}\nDiffViewer.defaultProps = {\n    oldValue: '',\n    newValue: '',\n    splitView: true,\n    highlightLines: [],\n    disableWordDiff: false,\n    compareMethod: compute_lines_1.DiffMethod.CHARS,\n    styles: {},\n    hideLineNumbers: false,\n    hideMarkers: false,\n    extraLinesSurroundingDiff: 3,\n    showDiffOnly: true,\n    useDarkTheme: false,\n    linesOffset: 0,\n    nonce: '',\n};\nexports.default = DiffViewer;\n","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst create_instance_1 = __importDefault(require(\"@emotion/css/create-instance\"));\n// eslint-disable-next-line import/no-anonymous-default-export\nexports.default = (styleOverride, useDarkTheme = false, nonce = '') => {\n    const { variables: overrideVariables = {} } = styleOverride, styles = __rest(styleOverride, [\"variables\"]);\n    const themeVariables = {\n        light: Object.assign({\n            diffViewerBackground: '#fff',\n            diffViewerColor: '#212529',\n            addedBackground: '#e6ffed',\n            addedColor: '#24292e',\n            removedBackground: '#ffeef0',\n            removedColor: '#24292e',\n            changedBackground: '#fffbdd',\n            wordAddedBackground: '#acf2bd',\n            wordRemovedBackground: '#fdb8c0',\n            addedGutterBackground: '#cdffd8',\n            removedGutterBackground: '#ffdce0',\n            gutterBackground: '#f7f7f7',\n            gutterBackgroundDark: '#f3f1f1',\n            highlightBackground: '#fffbdd',\n            highlightGutterBackground: '#fff5b1',\n            codeFoldGutterBackground: '#dbedff',\n            codeFoldBackground: '#f1f8ff',\n            emptyLineBackground: '#fafbfc',\n            gutterColor: '#212529',\n            addedGutterColor: '#212529',\n            removedGutterColor: '#212529',\n            codeFoldContentColor: '#212529',\n            diffViewerTitleBackground: '#fafbfc',\n            diffViewerTitleColor: '#212529',\n            diffViewerTitleBorderColor: '#eee',\n        }, (overrideVariables.light || {})),\n        dark: Object.assign({\n            diffViewerBackground: '#2e303c',\n            diffViewerColor: '#FFF',\n            addedBackground: '#044B53',\n            addedColor: 'white',\n            removedBackground: '#632F34',\n            removedColor: 'white',\n            changedBackground: '#3e302c',\n            wordAddedBackground: '#055d67',\n            wordRemovedBackground: '#7d383f',\n            addedGutterBackground: '#034148',\n            removedGutterBackground: '#632b30',\n            gutterBackground: '#2c2f3a',\n            gutterBackgroundDark: '#262933',\n            highlightBackground: '#2a3967',\n            highlightGutterBackground: '#2d4077',\n            codeFoldGutterBackground: '#21232b',\n            codeFoldBackground: '#262831',\n            emptyLineBackground: '#363946',\n            gutterColor: '#666c87',\n            addedGutterColor: '#8c8c8c',\n            removedGutterColor: '#8c8c8c',\n            codeFoldContentColor: '#656a8b',\n            diffViewerTitleBackground: '#2f323e',\n            diffViewerTitleColor: '#555a7b',\n            diffViewerTitleBorderColor: '#353846',\n        }, (overrideVariables.dark || {})),\n    };\n    const variables = useDarkTheme ? themeVariables.dark : themeVariables.light;\n    const { css, cx } = (0, create_instance_1.default)({ key: 'react-diff', nonce });\n    const content = css({\n        width: '100%',\n        label: 'content',\n    });\n    const splitView = css({\n        [`.${content}`]: {\n            width: '50%',\n        },\n        label: 'split-view',\n    });\n    const diffContainer = css({\n        width: '100%',\n        background: variables.diffViewerBackground,\n        pre: {\n            margin: 0,\n            whiteSpace: 'pre-wrap',\n            lineHeight: '25px',\n        },\n        label: 'diff-container',\n        borderCollapse: 'collapse',\n    });\n    const codeFoldContent = css({\n        color: variables.codeFoldContentColor,\n        label: 'code-fold-content',\n    });\n    const contentText = css({\n        color: variables.diffViewerColor,\n        label: 'content-text',\n    });\n    const titleBlock = css({\n        background: variables.diffViewerTitleBackground,\n        padding: 10,\n        borderBottom: `1px solid ${variables.diffViewerTitleBorderColor}`,\n        label: 'title-block',\n        ':last-child': {\n            borderLeft: `1px solid ${variables.diffViewerTitleBorderColor}`,\n        },\n        [`.${contentText}`]: {\n            color: variables.diffViewerTitleColor,\n        },\n    });\n    const lineNumber = css({\n        color: variables.gutterColor,\n        label: 'line-number',\n    });\n    const diffRemoved = css({\n        background: variables.removedBackground,\n        color: variables.removedColor,\n        pre: {\n            color: variables.removedColor,\n        },\n        [`.${lineNumber}`]: {\n            color: variables.removedGutterColor,\n        },\n        label: 'diff-removed',\n    });\n    const diffAdded = css({\n        background: variables.addedBackground,\n        color: variables.addedColor,\n        pre: {\n            color: variables.addedColor,\n        },\n        [`.${lineNumber}`]: {\n            color: variables.addedGutterColor,\n        },\n        label: 'diff-added',\n    });\n    const diffChanged = css({\n        background: variables.changedBackground,\n        [`.${lineNumber}`]: {\n            color: variables.gutterColor,\n        },\n        label: 'diff-changed',\n    });\n    const wordDiff = css({\n        padding: 2,\n        display: 'inline-flex',\n        borderRadius: 4,\n        wordBreak: 'break-all',\n        label: 'word-diff',\n    });\n    const wordAdded = css({\n        background: variables.wordAddedBackground,\n        label: 'word-added',\n    });\n    const wordRemoved = css({\n        background: variables.wordRemovedBackground,\n        label: 'word-removed',\n    });\n    const codeFoldGutter = css({\n        backgroundColor: variables.codeFoldGutterBackground,\n        label: 'code-fold-gutter',\n    });\n    const codeFold = css({\n        backgroundColor: variables.codeFoldBackground,\n        height: 40,\n        fontSize: 14,\n        fontWeight: 700,\n        label: 'code-fold',\n        a: {\n            textDecoration: 'underline !important',\n            cursor: 'pointer',\n            pre: {\n                display: 'inline',\n            },\n        },\n    });\n    const emptyLine = css({\n        backgroundColor: variables.emptyLineBackground,\n        label: 'empty-line',\n    });\n    const marker = css({\n        width: 25,\n        paddingLeft: 10,\n        paddingRight: 10,\n        userSelect: 'none',\n        label: 'marker',\n        [`&.${diffAdded}`]: {\n            pre: {\n                color: variables.addedColor,\n            },\n        },\n        [`&.${diffRemoved}`]: {\n            pre: {\n                color: variables.removedColor,\n            },\n        },\n    });\n    const highlightedLine = css({\n        background: variables.highlightBackground,\n        label: 'highlighted-line',\n        [`.${wordAdded}, .${wordRemoved}`]: {\n            backgroundColor: 'initial',\n        },\n    });\n    const highlightedGutter = css({\n        label: 'highlighted-gutter',\n    });\n    const gutter = css({\n        userSelect: 'none',\n        minWidth: 50,\n        padding: '0 10px',\n        whiteSpace: 'nowrap',\n        label: 'gutter',\n        textAlign: 'right',\n        background: variables.gutterBackground,\n        '&:hover': {\n            cursor: 'pointer',\n            background: variables.gutterBackgroundDark,\n            pre: {\n                opacity: 1,\n            },\n        },\n        pre: {\n            opacity: 0.5,\n        },\n        [`&.${diffAdded}`]: {\n            background: variables.addedGutterBackground,\n        },\n        [`&.${diffRemoved}`]: {\n            background: variables.removedGutterBackground,\n        },\n        [`&.${highlightedGutter}`]: {\n            background: variables.highlightGutterBackground,\n            '&:hover': {\n                background: variables.highlightGutterBackground,\n            },\n        },\n    });\n    const emptyGutter = css({\n        '&:hover': {\n            background: variables.gutterBackground,\n            cursor: 'initial',\n        },\n        label: 'empty-gutter',\n    });\n    const line = css({\n        verticalAlign: 'baseline',\n        label: 'line',\n    });\n    const defaultStyles = {\n        diffContainer,\n        diffRemoved,\n        diffAdded,\n        diffChanged,\n        splitView,\n        marker,\n        highlightedGutter,\n        highlightedLine,\n        gutter,\n        line,\n        wordDiff,\n        wordAdded,\n        wordRemoved,\n        codeFoldGutter,\n        codeFold,\n        emptyGutter,\n        emptyLine,\n        lineNumber,\n        contentText,\n        content,\n        codeFoldContent,\n        titleBlock,\n    };\n    const computerOverrideStyles = Object.keys(styles).reduce((acc, key) => (Object.assign(Object.assign({}, acc), {\n        [key]: css(styles[key]),\n    })), {});\n    return Object.keys(defaultStyles).reduce((acc, key) => (Object.assign(Object.assign({}, acc), {\n        [key]: computerOverrideStyles[key]\n            ? cx(defaultStyles[key], computerOverrideStyles[key])\n            : defaultStyles[key],\n    })), {});\n};\n","// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nexport function convertChangesToDMP(changes) {\n  let ret = [],\n      change,\n      operation;\n  for (let i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n","export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n","import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n","export default function Diff() {}\n\nDiff.prototype = {\n  diff(oldString, newString, options = {}) {\n    let callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    let self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function() { callback(undefined, value); }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    let newLen = newString.length, oldLen = oldString.length;\n    let editLength = 1;\n    let maxEditLength = newLen + oldLen;\n    if(options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n    const maxExecutionTime = options.timeout ?? Infinity;\n    const abortAfterTimestamp = Date.now() + maxExecutionTime;\n\n    let bestPath = [{ oldPos: -1, lastComponent: undefined }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{value: this.join(newString), count: newString.length}]);\n    }\n\n    // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n    let minDiagonalToConsider = -Infinity, maxDiagonalToConsider = Infinity;\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (\n        let diagonalPath = Math.max(minDiagonalToConsider, -editLength);\n        diagonalPath <= Math.min(maxDiagonalToConsider, editLength);\n        diagonalPath += 2\n      ) {\n        let basePath;\n        let removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        let canAdd = false;\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          const addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        let canRemove = removePath && removePath.oldPos + 1 < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n        if (!canRemove || (canAdd && removePath.oldPos + 1 < addPath.oldPos)) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n    if (callback) {\n      (function exec() {\n        setTimeout(function() {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      }());\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        let ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  addToPath(path, added, removed, oldPosInc) {\n    let last = path.lastComponent;\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: last.count + 1, added: added, removed: removed, previousComponent: last.previousComponent }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: 1, added: added, removed: removed, previousComponent: last }\n      };\n    }\n  },\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {count: commonCount, previousComponent: basePath.lastComponent};\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n\n  equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right\n        || (this.options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n    }\n  },\n  removeEmpty(array) {\n    let ret = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  castInput(value) {\n    return value;\n  },\n  tokenize(value) {\n    return value.split('');\n  },\n  join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  const components = [];\n  let nextComponent;\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n  components.reverse();\n\n  let componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        let value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function(value, i) {\n          let oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let finalComponent = components[componentLen - 1];\n  if (componentLen > 1\n      && typeof finalComponent.value === 'string'\n      && (finalComponent.added || finalComponent.removed)\n      && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n","import Diff from './base';\n\nexport const characterDiff = new Diff();\nexport function diffChars(oldStr, newStr, options) { return characterDiff.diff(oldStr, newStr, options); }\n","import Diff from './base';\n\nexport const cssDiff = new Diff();\ncssDiff.tokenize = function(value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nexport function diffCss(oldStr, newStr, callback) { return cssDiff.diff(oldStr, newStr, callback); }\n","import Diff from './base';\nimport {lineDiff} from './line';\n\nconst objectPrototypeToString = Object.prototype.toString;\n\n\nexport const jsonDiff = new Diff();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = lineDiff.tokenize;\njsonDiff.castInput = function(value) {\n  const {undefinedReplacement, stringifyReplacer = (k, v) => typeof v === 'undefined' ? undefinedReplacement : v} = this.options;\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function(left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nexport function diffJson(oldObj, newObj, options) { return jsonDiff.diff(oldObj, newObj, options); }\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nexport function canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  let i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  let canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    let sortedKeys = [],\n        key;\n    for (key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(key)) {\n        sortedKeys.push(key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      key = sortedKeys[i];\n      canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n","import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  if(this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n","import Diff from './base';\n\n\nexport const sentenceDiff = new Diff();\nsentenceDiff.tokenize = function(value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nexport function diffSentences(oldStr, newStr, callback) { return sentenceDiff.diff(oldStr, newStr, callback); }\n","import Diff from './base';\nimport {generateOptions} from '../util/params';\n\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n\nconst reWhitespace = /\\S/;\n\nexport const wordDiff = new Diff();\nwordDiff.equals = function(left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || (this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n};\nwordDiff.tokenize = function(value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  let tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (let i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2]\n          && extendedWordChars.test(tokens[i])\n          && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nexport function diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {ignoreWhitespace: true});\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n","/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIs:\n * Diff.diffChars: Character by character diff\n * Diff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * Diff.diffLines: Line based diff\n *\n * Diff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {reversePatch} from './patch/reverse';\nimport {structuredPatch, createTwoFilesPatch, createPatch, formatPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  formatPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  reversePatch,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n","import {parsePatch} from './parse';\nimport distanceIterator from '../util/distance-iterator';\n\nexport function applyPatch(source, uniDiff, options = {}) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  let lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n\n      compareLine = options.compareLine || ((lineNumber, line, operation, patchContent) => line === patchContent),\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n\n      removeEOFNL,\n      addEOFNL;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line);\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    let iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  let diffOffset = 0;\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        toPos = hunk.oldStart + hunk.offset + diffOffset - 1;\n    diffOffset += hunk.newLines - hunk.oldLines;\n\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line),\n          delimiter = hunk.linedelimiters && hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        toPos++;\n      } else if (operation === '-') {\n        lines.splice(toPos, 1);\n        delimiters.splice(toPos, 1);\n      /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(toPos, 0, content);\n        delimiters.splice(toPos, 0, delimiter);\n        toPos++;\n      } else if (operation === '\\\\') {\n        let previousOperation = hunk.lines[j - 1] ? hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (let _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nexport function applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  let currentIndex = 0;\n  function processIndex() {\n    let index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function(err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      let updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function(err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n","import {diffLines} from '../diff/line';\n\nexport function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  const diff = diffLines(oldStr, newStr, options);\n  if(!diff) {\n    return;\n  }\n\n  diff.push({value: '', lines: []}); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function(entry) { return ' ' + entry; });\n  }\n\n  let hunks = [];\n  let oldRangeStart = 0, newRangeStart = 0, curRange = [],\n      oldLine = 1, newLine = 1;\n  for (let i = 0; i < diff.length; i++) {\n    const current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        const prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      curRange.push(... lines.map(function(entry) {\n        return (current.added ? '+' : '-') + entry;\n      }));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          // Overlapping\n          curRange.push(... contextLines(lines));\n        } else {\n          // end the range and output\n          let contextSize = Math.min(lines.length, options.context);\n          curRange.push(... contextLines(lines.slice(0, contextSize)));\n\n          let hunk = {\n            oldStart: oldRangeStart,\n            oldLines: (oldLine - oldRangeStart + contextSize),\n            newStart: newRangeStart,\n            newLines: (newLine - newRangeStart + contextSize),\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            let oldEOFNewline = ((/\\n$/).test(oldStr));\n            let newEOFNewline = ((/\\n$/).test(newStr));\n            let noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n            if ((!oldEOFNewline && !noNlBeforeAdds) || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nexport function formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  const ret = [];\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (let i = 0; i < diff.hunks.length; i++) {\n    const hunk = diff.hunks[i];\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n    ret.push(\n      '@@ -' + hunk.oldStart + ',' + hunk.oldLines\n      + ' +' + hunk.newStart + ',' + hunk.newLines\n      + ' @@'\n    );\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nexport function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nexport function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n","import {structuredPatch} from './create';\nimport {parsePatch} from './parse';\n\nimport {arrayEqual, arrayStartsWith} from '../util/array';\n\nexport function calcLineCount(hunk) {\n  const {oldLines, newLines} = calcOldNewLineCount(hunk.lines);\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nexport function merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  let ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  let mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    let mineCurrent = mine.hunks[mineIndex] || {oldStart: Infinity},\n        theirsCurrent = theirs.hunks[theirsIndex] || {oldStart: Infinity};\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      let mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if ((/^@@/m).test(param) || ((/^Index:/m).test(param))) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {mine, theirs};\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart\n    && (test.oldStart + test.oldLines) < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  let mine = {offset: mineOffset, lines: mineLines, index: 0},\n      their = {offset: theirOffset, lines: theirLines, index: 0};\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    let mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+')\n        && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      // Mine inserted\n      hunk.lines.push(... collectChange(mine));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      // Theirs inserted\n      hunk.lines.push(... collectChange(their));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges)\n        && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      hunk.lines.push(... myChanges);\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges)\n        && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      hunk.lines.push(... theirChanges);\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    hunk.lines.push(... myChanges);\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    hunk.lines.push(... theirChanges.merged);\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  let ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    let line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  let changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length\n        && state.index < state.lines.length) {\n    let change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+'\n      && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged,\n    changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function(prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (let i = 0; i < delta; i++) {\n    let changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  let oldLines = 0;\n  let newLines = 0;\n\n  lines.forEach(function(line) {\n    if (typeof line !== 'string') {\n      let myCount = calcOldNewLineCount(line.mine);\n      let theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return {oldLines, newLines};\n}\n","export function parsePatch(uniDiff, options = {}) {\n  let diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    let index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if ((/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/).test(line)) {\n        break;\n      }\n\n      // Diff index\n      let header = (/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/).exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      if ((/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/).test(line)) {\n        break;\n      } else if ((/^@@/).test(line)) {\n        index.hunks.push(parseHunk());\n      } else if (line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    const fileHeader = (/^(---|\\+\\+\\+)\\s+(.*)$/).exec(diffstr[i]);\n    if (fileHeader) {\n      let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      const data = fileHeader[2].split('\\t', 2);\n      let fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if ((/^\".*\"$/).test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    let chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    let hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    };\n\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    let addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0\n            && (i + 2 < diffstr.length)\n            && diffstr[i + 1].indexOf('+++ ') === 0\n            && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n      }\n      let operation = (diffstr[i].length == 0 && i != (diffstr.length - 1)) ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n","export function reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return {\n    ...structuredPatch,\n    oldFileName: structuredPatch.newFileName,\n    oldHeader: structuredPatch.newHeader,\n    newFileName: structuredPatch.oldFileName,\n    newHeader: structuredPatch.oldHeader,\n    hunks: structuredPatch.hunks.map(hunk => {\n      return {\n        oldLines: hunk.newLines,\n        oldStart: hunk.newStart,\n        newLines: hunk.oldLines,\n        newStart: hunk.oldStart,\n        linedelimiters: hunk.linedelimiters,\n        lines: hunk.lines.map(l => {\n          if (l.startsWith('-')) { return `+${l.slice(1)}`; }\n          if (l.startsWith('+')) { return `-${l.slice(1)}`; }\n          return l;\n        })\n      };\n    })\n  };\n}\n","export function arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nexport function arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nexport default function(start, minLine, maxLine) {\n  let wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n}\n","export function generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (let name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["StyleSheet","options","_this","this","_insertTag","tag","before","tags","length","insertionPoint","nextSibling","prepend","container","firstChild","insertBefore","push","isSpeedy","undefined","speedy","ctr","nonce","key","_proto","prototype","hydrate","nodes","forEach","insert","rule","document","createElement","setAttribute","appendChild","createTextNode","createStyleElement","sheet","i","styleSheets","ownerNode","sheetForTag","insertRule","cssRules","e","flush","_tag$parentNode","parentNode","removeChild","abs","Math","from","String","fromCharCode","assign","Object","trim","value","replace","pattern","replacement","indexof","search","indexOf","charat","index","charCodeAt","substr","begin","end","slice","strlen","sizeof","append","array","line","column","position","character","characters","node","root","parent","type","props","children","return","copy","prev","next","peek","caret","token","alloc","dealloc","delimit","delimiter","whitespace","escaping","count","commenter","identifier","MS","MOZ","WEBKIT","COMMENT","RULESET","DECLARATION","KEYFRAMES","serialize","callback","output","stringify","element","join","compile","parse","rules","rulesets","pseudo","points","declarations","offset","atrule","property","previous","variable","scanning","ampersand","reference","comment","declaration","ruleset","post","size","j","k","x","y","z","identifierWithPointTracking","getRules","parsed","toRules","fixedElements","WeakMap","compat","isImplicitRule","get","set","parentRules","removeLabel","prefix","hash","defaultStylisPlugins","map","combine","exec","match","createCache","ssrStyles","querySelectorAll","Array","call","getAttribute","head","_insert","stylisPlugins","inserted","nodesToHydrate","attrib","split","currentSheet","finalizingPlugins","serializer","collection","middleware","concat","selector","serialized","shouldCache","styles","cache","name","registered","unitlessKeys","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","scale","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","memoize","fn","create","arg","hyphenateRegex","animationRegex","isCustomProperty","isProcessableValue","processStyleName","styleName","toLowerCase","processStyleValue","p1","p2","cursor","unitless","handleInterpolation","mergedProps","interpolation","componentSelector","__emotion_styles","keyframes","anim","serializedStyles","obj","string","isArray","asString","interpolated","_i","createStringFromObject","previousCursor","result","cached","labelPattern","serializeStyles","args","stringMode","strings","raw","lastIndex","identifierName","str","h","len","toString","hashString","getRegisteredStyles","registeredStyles","classNames","rawClassName","className","insertWithoutScoping","merge","css","createEmotion","_len","arguments","_key","isStringTag","registerStyles","current","insertStyles","cx","_len4","_key4","classnames","injectGlobal","_len3","_key3","_len2","_key2","animation","ids","bind","cls","toAdd","defineProperty","exports","computeHiddenBlocks","lineInformation","diffLines","extraLines","currentBlock","newBlockIndex","lineBlocks","blocks","lineIndex","isDiffLine","some","diffLine","endLine","lines","startLine","__createBinding","o","m","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","__setModuleDefault","v","__importStar","mod","hasOwnProperty","computeLineInformation","DiffMethod","DiffType","diff","require","jsDiff","constructLines","oldString","newString","disableWordDiff","lineCompareMethod","CHARS","linesOffset","showLines","diffArray","trimRight","newlineIsToken","ignoreWhitespace","ignoreCase","diffJson","rightLineNumber","leftLineNumber","counter","ignoreDiffIndexes","getLineInformation","diffIndex","added","removed","evaluateOnlyFirstLine","left","right","includes","countAsChange","lineNumber","REMOVED","nextDiff","nextDiffLines","nextDiffLineInfo","rightValue","computedDiff","oldValue","newValue","compareMethod","_ref","diffInformation","ADDED","DEFAULT","computeDiff","filter","Boolean","_ref2","__importDefault","LineNumberPrefix","jsx_runtime_1","React","classnames_1","compute_lines_1","styles_1","compute_hidden_blocks_1","default","DiffViewer","Component","constructor","super","resetCodeBlocks","state","expandedBlocks","setState","onBlockExpand","id","prevState","computeStyles","onLineNumberClickProxy","onLineNumberClick","renderWordDiff","renderer","wordDiff","jsx","wordAdded","wordRemoved","renderLine","additionalLineNumber","additionalPrefix","lineNumberTemplate","additionalLineNumberTemplate","highlightLine","highlightLines","changed","CHANGED","content","renderContent","jsxs","Fragment","hideLineNumbers","onClick","gutter","emptyGutter","diffAdded","diffRemoved","diffChanged","highlightedGutter","splitView","renderGutter","hideMarkers","marker","emptyLine","highlightedLine","contentText","renderSplitView","LEFT","RIGHT","renderInlineView","onBlockClickProxy","renderSkippedLineIndicator","num","blockNumber","leftBlockLineNumber","rightBlockLineNumber","message","codeFoldMessageRenderer","codeFoldContent","tabIndex","isUnifiedViewWithoutLineNumbers","codeFold","codeFoldGutter","renderDiff","alwaysShowLines","extraLinesSurroundingDiff","round","showDiffOnly","blockIndex","lastLineOfBlock","render","useDarkTheme","leftTitle","rightTitle","JSON","Error","colSpanOnSplitView","colSpanOnInlineView","columnExtension","title","colSpan","titleBlock","diffContainer","defaultProps","__rest","s","t","p","getOwnPropertySymbols","propertyIsEnumerable","create_instance_1","styleOverride","variables","overrideVariables","themeVariables","light","diffViewerBackground","diffViewerColor","addedBackground","addedColor","removedBackground","removedColor","changedBackground","wordAddedBackground","wordRemovedBackground","addedGutterBackground","removedGutterBackground","gutterBackground","gutterBackgroundDark","highlightBackground","highlightGutterBackground","codeFoldGutterBackground","codeFoldBackground","emptyLineBackground","gutterColor","addedGutterColor","removedGutterColor","codeFoldContentColor","diffViewerTitleBackground","diffViewerTitleColor","diffViewerTitleBorderColor","dark","width","label","background","pre","margin","whiteSpace","borderCollapse","color","padding","borderBottom","borderLeft","display","borderRadius","wordBreak","backgroundColor","height","fontSize","a","textDecoration","paddingLeft","paddingRight","userSelect","minWidth","textAlign","defaultStyles","verticalAlign","computerOverrideStyles","keys","reduce","acc","changes","change","operation","ret","escapeHTML","n","oldArr","newArr","arrayDiff","tokenize","removeEmpty","Diff","buildValues","lastComponent","useLongestToken","nextComponent","components","previousComponent","reverse","componentPos","componentLen","newPos","oldPos","component","tmp","finalComponent","equals","pop","_options$timeout","self","done","setTimeout","castInput","newLen","oldLen","editLength","maxEditLength","min","maxExecutionTime","timeout","Infinity","abortAfterTimestamp","Date","now","bestPath","extractCommon","minDiagonalToConsider","maxDiagonalToConsider","execEditLength","diagonalPath","max","basePath","removePath","addPath","canAdd","addPathNewPos","canRemove","addToPath","path","oldPosInc","last","commonCount","comparator","chars","oldStr","newStr","characterDiff","cssDiff","oldObj","newObj","jsonDiff","_base","_line","objectPrototypeToString","canonicalize","stack","replacementStack","replacer","canonicalizedObj","toJSON","_typeof","sortedKeys","sort","lineDiff","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","_params","generateOptions","stripTrailingCr","retLines","linesAndNewlines","sentenceDiff","extendedWordChars","reWhitespace","test","tokens","splice","_character","_word","_sentence","_css","_json","_array","_apply","_parse","_merge","_reverse","_create","_dmp","_xml","uniDiff","parsePatch","currentIndex","processIndex","complete","loadFile","err","data","updatedContent","applyPatch","patched","_distanceIterator","source","removeEOFNL","addEOFNL","delimiters","hunks","compareLine","patchContent","errorCount","fuzzFactor","minLine","hunkFits","hunk","toPos","maxLine","oldLines","localOffset","oldStart","iterator","diffOffset","_hunk","_toPos","newLines","linedelimiters","previousOperation","_k","fileName","oldHeader","newHeader","createTwoFilesPatch","structuredPatch","oldFileName","newFileName","context","oldRangeStart","newRangeStart","curRange","oldLine","newLine","_loop","_curRange","contextLines","apply","_toConsumableArray","entry","_curRange2","_curRange3","contextSize","newStart","oldEOFNewline","newEOFNewline","noNlBeforeAdds","formatPatch","mine","theirs","base","loadPatch","fileNameChanged","selectField","mineIndex","theirsIndex","mineOffset","theirsOffset","mineCurrent","theirsCurrent","hunkBefore","cloneHunk","mergedHunk","mergeLines","calcLineCount","_calcOldNewLineCount","calcOldNewLineCount","param","patch","conflict","check","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","_hunk$lines","collectChange","_hunk$lines2","removal","mutualChange","insertTrailing","myChanges","theirChanges","allRemoves","_hunk$lines3","_hunk$lines4","arrayStartsWith","skipRemoveSuperset","arrayEqual","_hunk$lines5","swap","_hunk$lines6","matchChanges","merged","matchIndex","contextChanges","conflicted","collectContext","removeChanges","delta","changeContent","myCount","theirCount","diffstr","list","parseIndex","header","parseFileHeader","parseHunk","strict","fileHeader","keyPrefix","chunkHeaderIndex","chunkHeader","addCount","removeCount","reversePatch","_objectSpread","l","startsWith","start","b","wantForward","backwardExhausted","forwardExhausted","defaults","safeIsNaN","Number","isNaN","areInputsEqual","newInputs","lastInputs","first","second","memoizeOne","resultFn","isEqual","memoized","newArgs","lastThis","lastArgs","lastResult","clear","hasOwn","classes","appendClass","parseValue","newClass","module"],"sourceRoot":""}