{"version":3,"file":"static/js/3.c2c90bb7.chunk.js","mappings":"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","sources":["components/ui/card.jsx","components/ui/label.jsx","components/ui/textarea.jsx","components/ui/checkbox.jsx","components/CodeMirrorField.js","features/pretty-formatter/PrettyFormatter.js","pages/PrettyFormatXML.js","utils/format.js","utils/decode.js"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"src/lib/utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className)}\n    {...props} />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)}\n    {...props} />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props} />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"src/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\n\nimport { cn } from \"src/lib/utils\"\n\nconst Textarea = React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-input px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props} />\n  );\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"src/lib/utils\"\n\nconst Checkbox = React.forwardRef(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}>\n    <CheckboxPrimitive.Indicator className={cn(\"flex items-center justify-center text-current\")}>\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import React from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { json } from \"@codemirror/lang-json\";\nimport { xml } from \"@codemirror/lang-xml\";\nimport { EditorView } from \"@codemirror/view\";\nimport { searchKeymap, highlightSelectionMatches } from \"@codemirror/search\";\nimport { keymap } from \"@codemirror/view\";\n\nfunction CodeMirrorField({ string, inputType }) {\n  \n\n  return (\n    <div className=\"rounded-md w-full h-full overflow-auto\">\n      <div className=\"text-sm rounded-lg break-words whitespace-pre-wrap h-full\">\n        <CodeMirror\n          value={string}\n          height=\"100%\"\n          width=\"100%\"\n          readOnly={true}\n          theme=\"dark\"\n          extensions={[\n            inputType && inputType.toUpperCase() === \"JSON\" ? json() : xml(),\n            EditorView.lineWrapping,\n            highlightSelectionMatches(),\n            keymap.of(searchKeymap),\n          ]}\n          style={{ backgroundColor: 'var(--input)' }} // Use the input color variable\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default CodeMirrorField;","import { useState, useContext } from \"react\";\nimport { format } from \"../../utils/format\";\nimport { Button } from \"../../components/ui/button\";\nimport { Textarea } from \"../../components/ui/textarea\";\nimport { Label } from \"../../components/ui/label\";\nimport { Checkbox } from \"../../components/ui/checkbox\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"../../components/ui/card\";\nimport CodeMirrorField from \"../../components/CodeMirrorField\";\nimport { Copy, ChevronDown, ChevronUp } from \"lucide-react\";\nimport { IOContext } from \"../../context/IOContext\";\n\nfunction PrettyFormatter({ pageIndex, title, formatter }) {\n  const { data, updateInput, updateOutput, updateCheckbox } = useContext(IOContext);\n  const { input, output, checkbox } = data[pageIndex];\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOutputVisible, setIsOutputVisible] = useState(true);\n  const [error, setError] = useState(null);\n\n  const withLoadingAndErrorHandling = (fn) => async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      await fn();\n    } catch (e) {\n      setError(e.message);\n      updateOutput(pageIndex, \"\");\n    }\n    setIsLoading(false);\n  };\n\n  const handleFormat = withLoadingAndErrorHandling(() => {\n    const formatted = format(formatter, input, checkbox);\n    updateOutput(pageIndex, formatted);\n  });\n\n  const handleClear = () => {\n    updateInput(pageIndex, \"\");\n    updateOutput(pageIndex, \"\");\n    setError(null); // Clear error on clear\n  };\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(output);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>Format {formatter.toUpperCase()} data to be more readable</CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-2\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"input\">Input</Label>\n          <Textarea\n            id=\"input\"\n            value={input}\n            onChange={(e) => {\n              updateInput(pageIndex, e.target.value);\n              setError(null); // Clear error on input change\n            }}\n            placeholder={`Enter ${formatter.toUpperCase()} data`}\n            className=\"h-50\"\n          />\n          {pageIndex.toLowerCase() === \"xml\" && (\n            <div className=\"flex items-center space-x-2 pt-2\">\n              <Checkbox\n                id=\"checkbox\"\n                checked={checkbox}\n                onCheckedChange={(checked) => updateCheckbox(pageIndex, checked)}\n              />\n              <Label htmlFor=\"checkbox\" className=\"text-sm\">\n                Decode OrgMsg\n              </Label>\n            </div>\n          )}\n        </div>\n        <div className=\"flex justify-center space-x-2\">\n          <Button onClick={handleFormat} disabled={isLoading}>\n            {isLoading ? \"Formatting...\" : \"Format\"}\n          </Button>\n          <Button onClick={handleClear} variant=\"ghost\">\n            Clear\n          </Button>\n        </div>\n        <div className=\"space-y-2\">\n          <div className=\"flex justify-between items-center\">\n            <Label htmlFor=\"output\">Output</Label>\n            <div>\n              <Button onClick={handleCopy} variant=\"ghost\" size=\"icon\">\n                <Copy className=\"h-4 w-4\" />\n              </Button>\n              <Button\n                onClick={() => setIsOutputVisible(!isOutputVisible)}\n                variant=\"ghost\"\n                size=\"icon\"\n              >\n                {isOutputVisible ? (\n                  <ChevronUp className=\"h-4 w-4\" />\n                ) : (\n                  <ChevronDown className=\"h-4 w-4\" />\n                )}\n              </Button>\n            </div>\n          </div>\n          {error && <p className=\"text-red-500 text-sm\">Error: {error}</p>}\n          {isOutputVisible && (\n            <div className=\"h-96\">\n              <CodeMirrorField string={output} inputType={formatter} />\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default PrettyFormatter;","import React from \"react\";\nimport PrettyFormatter from \"../features/pretty-formatter/PrettyFormatter\";\n\nfunction PrettyFormatXML() {\n  return (\n    <PrettyFormatter\n      pageIndex=\"xml\"\n      title=\"Pretty Format XML\"\n      formatter=\"xml\"\n    />\n  );\n}\n\nexport default PrettyFormatXML;","import { base64ToUtf8 } from \"./decode\";\nimport beautify from \"js-beautify\";\n\nconst formatXML = (xmlString, decodeOriginalMessage) => {\n  // Basic XML validation\n  try {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\n    if (xmlDoc.getElementsByTagName(\"parsererror\").length > 0) {\n      throw new Error(\"Invalid XML syntax\");\n    }\n  } catch (e) {\n    throw new Error(\"Invalid XML syntax: \" + e.message);\n  }\n\n  let xml = xmlString;\n\n  if (decodeOriginalMessage) {\n    xml = xml.replace(/<([^>]*OrgMsg[^>]*)>([^<]+)<\\/\\1>/g, (match, tagName, base64Content) => {\n      try {\n        const decoded = base64ToUtf8(base64Content);\n        const formattedDecoded = formatXML(decoded, decodeOriginalMessage); // recursive formatting\n        return `<${tagName}>\n${formattedDecoded}\n</${tagName}>`;\n      } catch (e) {\n        console.warn(\"Failed to decode base64 content:\", e);\n        return match;\n      }\n    });\n  }\n\n  return beautify.html(xml, { indent_size: 2 });\n};\n\nconst formatJSON = (jsonString) => {\n  // This will throw an error if the JSON is invalid\n  const parsed = JSON.parse(jsonString);\n  return JSON.stringify(parsed, null, 2);\n};\n\nexport const format = (formatter, string, checkbox) => {\n  switch (formatter.toLowerCase()) {\n    case \"xml\":\n      return formatXML(string, checkbox);\n    case \"json\":\n      return formatJSON(string);\n    default:\n      return string;\n  }\n};\n\nexport const toOneLine = (inputString) => {\n  return inputString.replace(/\\s+/g, \" \").trim();\n};\n","\nexport const base64ToUtf8 = (base64) => {\n    const binaryString = atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    const decodedString = new TextDecoder(\"utf-8\").decode(bytes);\n    return decodedString;\n  };\n"],"names":["Card","React","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","cn","displayName","CardHeader","_ref2","_excluded2","CardTitle","_ref3","_excluded3","CardDescription","_ref4","_excluded4","CardContent","_ref5","_excluded5","CardFooter","_ref6","_excluded6","labelVariants","cva","Label","LabelPrimitive","Textarea","Checkbox","CheckboxPrimitive","children","Check","string","inputType","CodeMirror","value","height","width","readOnly","theme","extensions","toUpperCase","json","xml","EditorView","lineWrapping","highlightSelectionMatches","keymap","of","searchKeymap","style","backgroundColor","pageIndex","title","formatter","data","updateInput","updateOutput","updateCheckbox","useContext","IOContext","input","output","checkbox","isLoading","setIsLoading","useState","isOutputVisible","setIsOutputVisible","error","setError","handleFormat","fn","formatted","format","async","e","message","_jsxs","htmlFor","id","onChange","target","placeholder","concat","toLowerCase","checked","onCheckedChange","Button","onClick","disabled","handleClear","variant","handleCopy","navigator","clipboard","writeText","size","Copy","ChevronUp","ChevronDown","CodeMirrorField","PrettyFormatter","formatXML","xmlString","decodeOriginalMessage","parser","DOMParser","parseFromString","getElementsByTagName","length","Error","replace","match","tagName","base64Content","decoded","base64","binaryString","atob","bytes","Uint8Array","i","charCodeAt","TextDecoder","decode","base64ToUtf8","formattedDecoded","console","warn","beautify","indent_size","jsonString","parsed","JSON","parse","stringify","formatJSON","toOneLine","inputString","trim"],"sourceRoot":""}