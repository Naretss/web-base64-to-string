{"version":3,"file":"static/js/766.d5380e1d.chunk.js","mappings":"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","sources":["../node_modules/@radix-ui/react-separator/src/separator.tsx","../node_modules/@zumer/snapdom/dist/snapdom.mjs"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n *  Separator\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Separator';\nconst DEFAULT_ORIENTATION = 'horizontal';\nconst ORIENTATIONS = ['horizontal', 'vertical'] as const;\n\ntype Orientation = (typeof ORIENTATIONS)[number];\ntype SeparatorElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SeparatorProps extends PrimitiveDivProps {\n  /**\n   * Either `vertical` or `horizontal`. Defaults to `horizontal`.\n   */\n  orientation?: Orientation;\n  /**\n   * Whether or not the component is purely decorative. When true, accessibility-related attributes\n   * are updated so that that the rendered element is removed from the accessibility tree.\n   */\n  decorative?: boolean;\n}\n\nconst Separator = React.forwardRef<SeparatorElement, SeparatorProps>((props, forwardedRef) => {\n  const { decorative, orientation: orientationProp = DEFAULT_ORIENTATION, ...domProps } = props;\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  // `aria-orientation` defaults to `horizontal` so we only need it if `orientation` is vertical\n  const ariaOrientation = orientation === 'vertical' ? orientation : undefined;\n  const semanticProps = decorative\n    ? { role: 'none' }\n    : { 'aria-orientation': ariaOrientation, role: 'separator' };\n\n  return (\n    <Primitive.div\n      data-orientation={orientation}\n      {...semanticProps}\n      {...domProps}\n      ref={forwardedRef}\n    />\n  );\n});\n\nSeparator.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isValidOrientation(orientation: any): orientation is Orientation {\n  return ORIENTATIONS.includes(orientation);\n}\n\nconst Root = Separator;\n\nexport {\n  Separator,\n  //\n  Root,\n};\nexport type { SeparatorProps };\n","\n/*\n* snapdom\n* v.1.8.0\n* Author Juan Martin Muda\n* License MIT\n**/\n\n\n// src/core/cache.js\nvar imageCache = /* @__PURE__ */ new Map();\nvar bgCache = /* @__PURE__ */ new Map();\nvar resourceCache = /* @__PURE__ */ new Map();\nvar defaultStylesCache = /* @__PURE__ */ new Map();\nvar baseCSSCache = /* @__PURE__ */ new Map();\nvar computedStyleCache = /* @__PURE__ */ new WeakMap();\nvar processedFontURLs = /* @__PURE__ */ new Set();\n\n// src/utils/cssTools.js\nvar commonTags = [\n  \"div\",\n  \"span\",\n  \"p\",\n  \"a\",\n  \"img\",\n  \"ul\",\n  \"li\",\n  \"button\",\n  \"input\",\n  \"select\",\n  \"textarea\",\n  \"label\",\n  \"section\",\n  \"article\",\n  \"header\",\n  \"footer\",\n  \"nav\",\n  \"main\",\n  \"aside\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"svg\",\n  \"path\",\n  \"circle\",\n  \"rect\",\n  \"line\",\n  \"g\",\n  \"table\",\n  \"thead\",\n  \"tbody\",\n  \"tr\",\n  \"td\",\n  \"th\"\n];\nfunction precacheCommonTags() {\n  for (let tag of commonTags) {\n    getDefaultStyleForTag(tag);\n  }\n}\nfunction getDefaultStyleForTag(tagName) {\n  if (defaultStylesCache.has(tagName)) {\n    return defaultStylesCache.get(tagName);\n  }\n  const skipTags = /* @__PURE__ */ new Set([\"script\", \"style\", \"meta\", \"link\", \"noscript\", \"template\"]);\n  if (skipTags.has(tagName)) {\n    const empty = {};\n    defaultStylesCache.set(tagName, empty);\n    return empty;\n  }\n  let sandbox = document.getElementById(\"snapdom-sandbox\");\n  if (!sandbox) {\n    sandbox = document.createElement(\"div\");\n    sandbox.id = \"snapdom-sandbox\";\n    sandbox.style.position = \"absolute\";\n    sandbox.style.left = \"-9999px\";\n    sandbox.style.top = \"-9999px\";\n    sandbox.style.width = \"0\";\n    sandbox.style.height = \"0\";\n    sandbox.style.overflow = \"hidden\";\n    document.body.appendChild(sandbox);\n  }\n  const el = document.createElement(tagName);\n  el.style.all = \"initial\";\n  sandbox.appendChild(el);\n  const styles = getComputedStyle(el);\n  const defaults = {};\n  for (let prop of styles) {\n    defaults[prop] = styles.getPropertyValue(prop);\n  }\n  sandbox.removeChild(el);\n  defaultStylesCache.set(tagName, defaults);\n  return defaults;\n}\nfunction getStyleKey(snapshot, tagName, compress = false) {\n  const entries = [];\n  const defaultStyles = getDefaultStyleForTag(tagName);\n  for (let [prop, value] of Object.entries(snapshot)) {\n    if (!compress) {\n      if (value) {\n        entries.push(`${prop}:${value}`);\n      }\n    } else {\n      const defaultValue = defaultStyles[prop];\n      if (value && value !== defaultValue) {\n        entries.push(`${prop}:${value}`);\n      }\n    }\n  }\n  return entries.sort().join(\";\");\n}\nfunction collectUsedTagNames(root) {\n  const tagSet = /* @__PURE__ */ new Set();\n  if (root.nodeType !== Node.ELEMENT_NODE && root.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n    return [];\n  }\n  if (root.tagName) {\n    tagSet.add(root.tagName.toLowerCase());\n  }\n  if (typeof root.querySelectorAll === \"function\") {\n    root.querySelectorAll(\"*\").forEach((el) => tagSet.add(el.tagName.toLowerCase()));\n  }\n  return Array.from(tagSet);\n}\nfunction generateDedupedBaseCSS(usedTagNames) {\n  const groups = /* @__PURE__ */ new Map();\n  for (let tagName of usedTagNames) {\n    const styles = defaultStylesCache.get(tagName);\n    if (!styles) continue;\n    const key = Object.entries(styles).map(([k, v]) => `${k}:${v};`).sort().join(\"\");\n    if (!groups.has(key)) {\n      groups.set(key, []);\n    }\n    groups.get(key).push(tagName);\n  }\n  let css = \"\";\n  for (let [styleBlock, tagList] of groups.entries()) {\n    css += `${tagList.join(\",\")} { ${styleBlock} }\n`;\n  }\n  return css;\n}\nfunction generateCSSClasses(styleMap) {\n  const keySet = new Set(styleMap.values());\n  const classMap = /* @__PURE__ */ new Map();\n  let counter = 1;\n  for (const key of keySet) {\n    classMap.set(key, `c${counter++}`);\n  }\n  return classMap;\n}\n\n// src/utils/helpers.js\nasync function inlineSingleBackgroundEntry(entry, options = {}) {\n  const isUrl = entry.startsWith(\"url(\");\n  const isGradient = /^((repeating-)?(linear|radial|conic)-gradient)\\(/i.test(entry);\n  if (isUrl) {\n    const rawUrl = extractURL(entry);\n    if (!rawUrl) return entry;\n    const encodedUrl = safeEncodeURI(rawUrl);\n    if (bgCache.has(encodedUrl)) {\n      return options.skipInline ? void 0 : `url(${bgCache.get(encodedUrl)})`;\n    } else {\n      const crossOrigin = options.crossOrigin ? options.crossOrigin(encodedUrl) : \"anonymous\";\n      const dataUrl = await fetchImage(encodedUrl, 3e3, crossOrigin);\n      bgCache.set(encodedUrl, dataUrl);\n      return options.skipInline ? void 0 : `url(${dataUrl})`;\n    }\n  }\n  if (isGradient || entry === \"none\") {\n    return entry;\n  }\n  return entry;\n}\nfunction idle(fn, { fast = false } = {}) {\n  if (fast) return fn();\n  if (\"requestIdleCallback\" in window) {\n    requestIdleCallback(fn, { timeout: 50 });\n  } else {\n    setTimeout(fn, 1);\n  }\n}\nfunction getStyle(el, pseudo = null) {\n  if (!(el instanceof Element)) {\n    return window.getComputedStyle(el, pseudo);\n  }\n  let map = computedStyleCache.get(el);\n  if (!map) {\n    map = /* @__PURE__ */ new Map();\n    computedStyleCache.set(el, map);\n  }\n  if (!map.has(pseudo)) {\n    const st = window.getComputedStyle(el, pseudo);\n    map.set(pseudo, st);\n  }\n  return map.get(pseudo);\n}\nfunction parseContent(content) {\n  let clean = content.replace(/^['\"]|['\"]$/g, \"\");\n  if (clean.startsWith(\"\\\\\")) {\n    try {\n      return String.fromCharCode(parseInt(clean.replace(\"\\\\\", \"\"), 16));\n    } catch {\n      return clean;\n    }\n  }\n  return clean;\n}\nfunction extractURL(value) {\n  const urlStart = value.indexOf(\"url(\");\n  if (urlStart === -1) return null;\n  let url = value.slice(urlStart + 4).trim();\n  if (url.endsWith(\")\")) url = url.slice(0, -1).trim();\n  if (url.startsWith('\"') && url.endsWith('\"') || url.startsWith(\"'\") && url.endsWith(\"'\")) {\n    url = url.slice(1, -1);\n  }\n  return url;\n}\nfunction isIconFont(familyOrUrl) {\n  const iconFontPatterns = [\n    /font\\s*awesome/i,\n    /material\\s*icons/i,\n    /ionicons/i,\n    /glyphicons/i,\n    /feather/i,\n    /bootstrap\\s*icons/i,\n    /remix\\s*icons/i,\n    /heroicons/i,\n    /lucide/i\n  ];\n  return iconFontPatterns.some((rx) => rx.test(familyOrUrl));\n}\nfunction fetchImage(src, timeout = 3e3, crossOrigin = \"anonymous\") {\n  if (imageCache.has(src)) {\n    return Promise.resolve(imageCache.get(src));\n  }\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error(\"Image load timed out\"));\n    }, timeout);\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    image.onload = async () => {\n      clearTimeout(timeoutId);\n      try {\n        await image.decode();\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n        try {\n          const dataURL = canvas.toDataURL(\"image/png\");\n          imageCache.set(src, dataURL);\n          resolve(dataURL);\n        } catch (e) {\n          reject(new Error(\"CORS restrictions prevented image capture\"));\n        }\n      } catch (e) {\n        reject(e);\n      }\n    };\n    image.onerror = (e) => {\n      clearTimeout(timeoutId);\n      reject(new Error(\"Failed to load image: \" + (e.message || \"Unknown error\")));\n    };\n    image.src = src;\n  });\n}\nfunction snapshotComputedStyle(style) {\n  const snap = {};\n  for (let prop of style) {\n    snap[prop] = style.getPropertyValue(prop);\n  }\n  return snap;\n}\nfunction isSafari() {\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}\nfunction stripTranslate(transform) {\n  if (!transform || transform === \"none\") return \"\";\n  let cleaned = transform.replace(/translate[XY]?\\([^)]*\\)/g, \"\");\n  cleaned = cleaned.replace(/matrix\\(([^)]+)\\)/g, (_, values) => {\n    const parts = values.split(\",\").map((s) => s.trim());\n    if (parts.length !== 6) return `matrix(${values})`;\n    parts[4] = \"0\";\n    parts[5] = \"0\";\n    return `matrix(${parts.join(\", \")})`;\n  });\n  cleaned = cleaned.replace(/matrix3d\\(([^)]+)\\)/g, (_, values) => {\n    const parts = values.split(\",\").map((s) => s.trim());\n    if (parts.length !== 16) return `matrix3d(${values})`;\n    parts[12] = \"0\";\n    parts[13] = \"0\";\n    return `matrix3d(${parts.join(\", \")})`;\n  });\n  return cleaned.trim().replace(/\\s{2,}/g, \" \");\n}\nfunction safeEncodeURI(uri) {\n  try {\n    const newURI = decodeURI(uri);\n    return encodeURI(newURI);\n  } catch {\n    return uri;\n  }\n}\nfunction splitBackgroundImage(bg) {\n  const parts = [];\n  let depth = 0;\n  let lastIndex = 0;\n  for (let i = 0; i < bg.length; i++) {\n    const char = bg[i];\n    if (char === \"(\") depth++;\n    if (char === \")\") depth--;\n    if (char === \",\" && depth === 0) {\n      parts.push(bg.slice(lastIndex, i).trim());\n      lastIndex = i + 1;\n    }\n  }\n  parts.push(bg.slice(lastIndex).trim());\n  return parts;\n}\n\n// src/modules/styles.js\nfunction inlineAllStyles(source, clone, styleMap, cache, compress) {\n  if (source.tagName === \"STYLE\") return;\n  if (!cache.has(source)) {\n    cache.set(source, getStyle(source));\n  }\n  const style = cache.get(source);\n  const snapshot = snapshotComputedStyle(style);\n  const tagName = source.tagName?.toLowerCase() || \"div\";\n  const key = getStyleKey(snapshot, tagName, compress);\n  styleMap.set(clone, key);\n}\n\n// src/core/clone.js\nfunction deepClone(node, styleMap, styleCache, nodeMap, compress) {\n  if (node.nodeType === Node.ELEMENT_NODE && node.getAttribute(\"data-capture\") === \"exclude\") {\n    const spacer = document.createElement(\"div\");\n    const rect = node.getBoundingClientRect();\n    spacer.style.cssText = `display: inline-block; width: ${rect.width}px; height: ${rect.height}px; visibility: hidden;`;\n    return spacer;\n  }\n  if (node.tagName === \"IFRAME\") {\n    const fallback = document.createElement(\"div\");\n    fallback.textContent = \"\";\n    fallback.style.cssText = `width: ${node.offsetWidth}px; height: ${node.offsetHeight}px; background-image: repeating-linear-gradient(45deg, #ddd, #ddd 5px, #f9f9f9 5px, #f9f9f9 10px);display: flex;align-items: center;justify-content: center;font-size: 12px;color: #555; border: 1px solid #aaa;`;\n    return fallback;\n  }\n  if (node.nodeType === Node.ELEMENT_NODE && node.getAttribute(\"data-capture\") === \"placeholder\") {\n    const clone2 = node.cloneNode(false);\n    nodeMap.set(clone2, node);\n    inlineAllStyles(node, clone2, styleMap, styleCache, compress);\n    const placeholder = document.createElement(\"div\");\n    placeholder.textContent = node.getAttribute(\"data-placeholder-text\") || \"\";\n    placeholder.style.cssText = `color: #666;font-size: 12px;text-align: center;line-height: 1.4;padding: 0.5em;box-sizing: border-box;`;\n    clone2.appendChild(placeholder);\n    return clone2;\n  }\n  if (node.tagName === \"CANVAS\") {\n    const dataURL = node.toDataURL();\n    const img = document.createElement(\"img\");\n    img.src = dataURL;\n    img.width = node.width;\n    img.height = node.height;\n    img.style.display = \"inline-block\";\n    img.style.width = node.style.width || `${node.width}px`;\n    img.style.height = node.style.height || `${node.height}px`;\n    return img;\n  }\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (node.parentElement?.shadowRoot) {\n      const tag = node.parentElement.tagName.toLowerCase();\n      if (customElements.get(tag)) return null;\n    }\n    return node.cloneNode(true);\n  }\n  if (node.nodeType !== Node.ELEMENT_NODE) return node.cloneNode(true);\n  const clone = node.cloneNode(false);\n  nodeMap.set(clone, node);\n  if (node instanceof HTMLInputElement) {\n    clone.value = node.value;\n    clone.setAttribute(\"value\", node.value);\n    if (node.checked !== void 0) {\n      clone.checked = node.checked;\n      if (node.checked) clone.setAttribute(\"checked\", \"\");\n    }\n  } else if (node instanceof HTMLTextAreaElement) {\n    clone.value = node.value;\n    clone.textContent = node.value;\n  } else if (node instanceof HTMLSelectElement) {\n    clone.value = node.value;\n    Array.from(clone.options).forEach((opt) => {\n      if (opt.value === node.value) {\n        opt.setAttribute(\"selected\", \"\");\n      } else {\n        opt.removeAttribute(\"selected\");\n      }\n    });\n  }\n  inlineAllStyles(node, clone, styleMap, styleCache, compress);\n  const frag = document.createDocumentFragment();\n  node.childNodes.forEach((child) => {\n    const clonedChild = deepClone(child, styleMap, styleCache, nodeMap, compress);\n    if (clonedChild) frag.appendChild(clonedChild);\n  });\n  clone.appendChild(frag);\n  if (node.shadowRoot) {\n    const shadowContent = Array.from(node.shadowRoot.children).filter((el) => el.tagName !== \"STYLE\").map((el) => deepClone(el, styleMap, styleCache, nodeMap)).filter(Boolean);\n    const shadowFrag = document.createDocumentFragment();\n    shadowContent.forEach((child) => shadowFrag.appendChild(child));\n    clone.appendChild(shadowFrag);\n  }\n  return clone;\n}\n\n// src/modules/fonts.js\nasync function iconToImage(unicodeChar, fontFamily, fontWeight, fontSize = 32, color = \"#000\") {\n  fontFamily = fontFamily.replace(/^['\"]+|['\"]+$/g, \"\");\n  const dpr = window.devicePixelRatio || 1;\n  const tempCanvas = document.createElement(\"canvas\");\n  const tempCtx = tempCanvas.getContext(\"2d\");\n  tempCtx.font = fontWeight ? `${fontWeight} ${fontSize}px \"${fontFamily}\"` : `${fontSize}px \"${fontFamily}\"`;\n  const metrics = tempCtx.measureText(unicodeChar);\n  const ascent = metrics.actualBoundingBoxAscent || fontSize * 0.8;\n  const descent = metrics.actualBoundingBoxDescent || fontSize * 0.2;\n  const height = ascent + descent;\n  const width = metrics.width;\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = Math.ceil(width * dpr);\n  canvas.height = Math.ceil(height * dpr);\n  const ctx = canvas.getContext(\"2d\");\n  ctx.scale(dpr, dpr);\n  ctx.font = tempCtx.font;\n  ctx.textAlign = \"left\";\n  ctx.textBaseline = \"alphabetic\";\n  ctx.fillStyle = color;\n  ctx.fillText(unicodeChar, 0, ascent);\n  return canvas.toDataURL();\n}\nfunction isStylesheetLoaded(href) {\n  return Array.from(document.styleSheets).some((sheet) => sheet.href === href);\n}\nfunction injectLinkIfMissing(href) {\n  return new Promise((resolve) => {\n    if (isStylesheetLoaded(href)) return resolve(null);\n    const link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = href;\n    link.setAttribute(\"data-snapdom\", \"injected-import\");\n    link.onload = () => resolve(link);\n    link.onerror = () => resolve(null);\n    document.head.appendChild(link);\n  });\n}\nasync function embedCustomFonts({ ignoreIconFonts = true, preCached = false } = {}) {\n  if (resourceCache.has(\"fonts-embed-css\")) {\n    if (preCached) {\n      const style = document.createElement(\"style\");\n      style.setAttribute(\"data-snapdom\", \"embedFonts\");\n      style.textContent = resourceCache.get(\"fonts-embed-css\");\n      document.head.appendChild(style);\n    }\n    return resourceCache.get(\"fonts-embed-css\");\n  }\n  const importRegex = /@import\\s+url\\([\"']?([^\"')]+)[\"']?\\)/g;\n  const styleImports = [];\n  for (const styleTag of document.querySelectorAll(\"style\")) {\n    const cssText = styleTag.textContent || \"\";\n    const matches = Array.from(cssText.matchAll(importRegex));\n    for (const match of matches) {\n      const importUrl = match[1];\n      if (!isStylesheetLoaded(importUrl)) {\n        styleImports.push(importUrl);\n      }\n    }\n  }\n  await Promise.all(styleImports.map(injectLinkIfMissing));\n  const links = Array.from(document.querySelectorAll('link[rel=\"stylesheet\"]')).filter((link) => link.href);\n  let finalCSS = \"\";\n  for (const link of links) {\n    try {\n      const res = await fetch(link.href);\n      const cssText = await res.text();\n      if (ignoreIconFonts && (isIconFont(link.href) || isIconFont(cssText))) continue;\n      const urlRegex = /url\\(([\"']?)([^\"')]+)\\1\\)/g;\n      const inlinedCSS = await Promise.all(\n        Array.from(cssText.matchAll(urlRegex)).map(async (match) => {\n          let rawUrl = extractURL(match[0]);\n          if (!rawUrl) return null;\n          let url = rawUrl;\n          if (!url.startsWith(\"http\") && !url.startsWith(\"data:\")) {\n            url = new URL(url, link.href).href;\n          }\n          if (ignoreIconFonts && isIconFont(url)) return null;\n          if (resourceCache.has(url)) {\n            processedFontURLs.add(url);\n            return { original: match[0], inlined: `url(${resourceCache.get(url)})` };\n          }\n          if (processedFontURLs.has(url)) return null;\n          try {\n            const fontRes = await fetch(url);\n            const blob = await fontRes.blob();\n            const b64 = await new Promise((resolve) => {\n              const reader = new FileReader();\n              reader.onload = () => resolve(reader.result);\n              reader.readAsDataURL(blob);\n            });\n            resourceCache.set(url, b64);\n            processedFontURLs.add(url);\n            return { original: match[0], inlined: `url(${b64})` };\n          } catch (e) {\n            console.warn(\"[snapdom] Failed to fetch font resource:\", url);\n            return null;\n          }\n        })\n      );\n      let cssFinal = cssText;\n      for (const r of inlinedCSS) {\n        if (r) cssFinal = cssFinal.replace(r.original, r.inlined);\n      }\n      finalCSS += cssFinal + \"\\n\";\n    } catch (e) {\n      console.warn(\"[snapdom] Failed to fetch CSS:\", link.href);\n    }\n  }\n  for (const sheet of document.styleSheets) {\n    try {\n      if (!sheet.href || links.every((link) => link.href !== sheet.href)) {\n        for (const rule of sheet.cssRules) {\n          if (rule.type === CSSRule.FONT_FACE_RULE) {\n            const src = rule.style.getPropertyValue(\"src\");\n            if (!src) continue;\n            const urlRegex = /url\\(([\"']?)([^\"')]+)\\1\\)/g;\n            let inlinedSrc = src;\n            const matches = Array.from(src.matchAll(urlRegex));\n            for (const match of matches) {\n              let rawUrl = match[2].trim();\n              if (!rawUrl) continue;\n              let url = rawUrl;\n              if (!url.startsWith(\"http\") && !url.startsWith(\"data:\")) {\n                url = new URL(url, sheet.href || location.href).href;\n              }\n              if (ignoreIconFonts && isIconFont(url)) continue;\n              if (resourceCache.has(url)) {\n                processedFontURLs.add(url);\n                inlinedSrc = inlinedSrc.replace(match[0], `url(${resourceCache.get(url)})`);\n                continue;\n              }\n              if (processedFontURLs.has(url)) continue;\n              try {\n                const res = await fetch(url);\n                const blob = await res.blob();\n                const b64 = await new Promise((resolve) => {\n                  const reader = new FileReader();\n                  reader.onload = () => resolve(reader.result);\n                  reader.readAsDataURL(blob);\n                });\n                resourceCache.set(url, b64);\n                processedFontURLs.add(url);\n                inlinedSrc = inlinedSrc.replace(match[0], `url(${b64})`);\n              } catch (e) {\n                console.warn(\"[snapdom] Failed to fetch font URL:\", url);\n              }\n            }\n            finalCSS += `@font-face {\n  font-family: ${rule.style.getPropertyValue(\"font-family\")};\n  src: ${inlinedSrc};\n  font-style: ${rule.style.getPropertyValue(\"font-style\") || \"normal\"};\n  font-weight: ${rule.style.getPropertyValue(\"font-weight\") || \"normal\"};\n}\n`;\n          }\n        }\n      }\n    } catch (e) {\n      console.warn(\"[snapdom] Cannot access stylesheet\", sheet.href, e);\n    }\n  }\n  for (const font of document.fonts) {\n    if (font.family && font.status === \"loaded\" && font._snapdomSrc) {\n      let b64 = font._snapdomSrc;\n      if (!b64.startsWith(\"data:\")) {\n        if (resourceCache.has(font._snapdomSrc)) {\n          b64 = resourceCache.get(font._snapdomSrc);\n          processedFontURLs.add(font._snapdomSrc);\n        } else if (!processedFontURLs.has(font._snapdomSrc)) {\n          try {\n            const res = await fetch(font._snapdomSrc);\n            const blob = await res.blob();\n            b64 = await new Promise((resolve) => {\n              const reader = new FileReader();\n              reader.onload = () => resolve(reader.result);\n              reader.readAsDataURL(blob);\n            });\n            resourceCache.set(font._snapdomSrc, b64);\n            processedFontURLs.add(font._snapdomSrc);\n          } catch (e) {\n            console.warn(\"[snapdom] Failed to fetch dynamic font src:\", font._snapdomSrc);\n            continue;\n          }\n        }\n      }\n      finalCSS += `@font-face {\n  font-family: '${font.family}';\n  src: url(${b64});\n  font-style: ${font.style || \"normal\"};\n  font-weight: ${font.weight || \"normal\"};\n}\n`;\n    }\n  }\n  if (finalCSS) {\n    resourceCache.set(\"fonts-embed-css\", finalCSS);\n    if (preCached) {\n      const style = document.createElement(\"style\");\n      style.setAttribute(\"data-snapdom\", \"embedFonts\");\n      style.textContent = finalCSS;\n      document.head.appendChild(style);\n    }\n  }\n  return finalCSS;\n}\n\n// src/modules/pseudo.js\nasync function inlinePseudoElements(source, clone, styleMap, styleCache, compress, embedFonts = false) {\n  if (!(source instanceof Element) || !(clone instanceof Element)) return;\n  for (const pseudo of [\"::before\", \"::after\", \"::first-letter\"]) {\n    try {\n      const style = getStyle(source, pseudo);\n      if (!style || typeof style[Symbol.iterator] !== \"function\") continue;\n      if (pseudo === \"::first-letter\") {\n        const normal = getComputedStyle(source);\n        const isMeaningful = style.color !== normal.color || style.fontSize !== normal.fontSize || style.fontWeight !== normal.fontWeight;\n        if (!isMeaningful) continue;\n        const textNode = Array.from(clone.childNodes).find(\n          (n) => n.nodeType === Node.TEXT_NODE && n.textContent && n.textContent.trim().length > 0\n        );\n        if (!textNode) continue;\n        const text = textNode.textContent;\n        const match = text.match(/^([^\\p{L}\\p{N}\\s]*[\\p{L}\\p{N}](?:['’])?)/u);\n        const first = match?.[0];\n        const rest = text.slice(first?.length || 0);\n        if (!first || /[\\uD800-\\uDFFF]/.test(first)) continue;\n        const span = document.createElement(\"span\");\n        span.textContent = first;\n        span.dataset.snapdomPseudo = \"::first-letter\";\n        const snapshot = snapshotComputedStyle(style);\n        const key = getStyleKey(snapshot, \"span\", compress);\n        styleMap.set(span, key);\n        const restNode = document.createTextNode(rest);\n        clone.replaceChild(restNode, textNode);\n        clone.insertBefore(span, restNode);\n        continue;\n      }\n      const content = style.getPropertyValue(\"content\");\n      const bg = style.getPropertyValue(\"background-image\");\n      const bgColor = style.getPropertyValue(\"background-color\");\n      const hasContent = content !== \"none\";\n      const hasBg = bg && bg !== \"none\";\n      const hasBgColor = bgColor && bgColor !== \"transparent\" && bgColor !== \"rgba(0, 0, 0, 0)\";\n      if (hasContent || hasBg || hasBgColor) {\n        const fontFamily = style.getPropertyValue(\"font-family\");\n        const fontSize = parseInt(style.getPropertyValue(\"font-size\")) || 32;\n        const fontWeight = parseInt(style.getPropertyValue(\"font-weight\")) || false;\n        const color = style.getPropertyValue(\"color\") || \"#000\";\n        const pseudoEl = document.createElement(\"span\");\n        pseudoEl.dataset.snapdomPseudo = pseudo;\n        const snapshot = snapshotComputedStyle(style);\n        const key = getStyleKey(snapshot, \"span\", compress);\n        styleMap.set(pseudoEl, key);\n        const isIconFont2 = fontFamily && /font.*awesome|material|bootstrap|glyphicons|ionicons|remixicon|simple-line-icons|octicons|feather|typicons|weathericons|lucide/i.test(\n          fontFamily\n        );\n        const cleanContent = parseContent(content);\n        if (!embedFonts && isIconFont2 && cleanContent.length === 1) {\n          const imgEl = document.createElement(\"img\");\n          imgEl.src = await iconToImage(cleanContent, fontFamily, fontWeight, fontSize, color);\n          imgEl.style = \"display:block;width:100%;height:100%;object-fit:contain;\";\n          pseudoEl.appendChild(imgEl);\n        } else if (cleanContent.startsWith(\"url(\")) {\n          const rawUrl = extractURL(cleanContent);\n          if (rawUrl && rawUrl.trim() !== \"\") {\n            try {\n              const imgEl = document.createElement(\"img\");\n              const dataUrl = await fetchImage(safeEncodeURI(rawUrl));\n              imgEl.src = dataUrl;\n              imgEl.style = \"display:block;width:100%;height:100%;object-fit:contain;\";\n              pseudoEl.appendChild(imgEl);\n            } catch (e) {\n              console.error(`[snapdom] Error in pseudo ${pseudo} for`, source, e);\n            }\n          }\n        } else if (!isIconFont2 && cleanContent && cleanContent !== \"none\") {\n          pseudoEl.textContent = cleanContent;\n        }\n        if (hasBg) {\n          try {\n            const bgSplits = splitBackgroundImage(bg);\n            const newBgParts = await Promise.all(\n              bgSplits.map((entry) => inlineSingleBackgroundEntry(entry))\n            );\n            pseudoEl.style.backgroundImage = newBgParts.join(\", \");\n          } catch (e) {\n            console.warn(`[snapdom] Failed to inline background-image for ${pseudo}`, e);\n          }\n        }\n        if (hasBgColor) pseudoEl.style.backgroundColor = bgColor;\n        const hasContent2 = pseudoEl.childNodes.length > 0 || pseudoEl.textContent && pseudoEl.textContent.trim() !== \"\";\n        const hasVisibleBox = hasContent2 || hasBg || hasBgColor;\n        if (!hasVisibleBox) continue;\n        pseudo === \"::before\" ? clone.insertBefore(pseudoEl, clone.firstChild) : clone.appendChild(pseudoEl);\n      }\n    } catch (e) {\n      console.warn(`[snapdom] Failed to capture ${pseudo} for`, source, e);\n    }\n  }\n  const sChildren = Array.from(source.children);\n  const cChildren = Array.from(clone.children).filter((child) => !child.dataset.snapdomPseudo);\n  for (let i = 0; i < Math.min(sChildren.length, cChildren.length); i++) {\n    await inlinePseudoElements(\n      sChildren[i],\n      cChildren[i],\n      styleMap,\n      styleCache,\n      compress,\n      embedFonts\n    );\n  }\n}\n\n// src/core/prepare.js\nasync function prepareClone(element, compress = false, embedFonts = false) {\n  const styleMap = /* @__PURE__ */ new Map();\n  const styleCache = /* @__PURE__ */ new WeakMap();\n  const nodeMap = /* @__PURE__ */ new Map();\n  let clone;\n  try {\n    clone = deepClone(element, styleMap, styleCache, nodeMap, compress);\n  } catch (e) {\n    console.warn(\"deepClone failed:\", e);\n    throw e;\n  }\n  try {\n    await inlinePseudoElements(element, clone, styleMap, styleCache, compress, embedFonts);\n  } catch (e) {\n    console.warn(\"inlinePseudoElements failed:\", e);\n  }\n  let classCSS = \"\";\n  if (compress) {\n    const keyToClass = generateCSSClasses(styleMap);\n    classCSS = Array.from(keyToClass.entries()).map(([key, className]) => `.${className}{${key}}`).join(\"\");\n    for (const [node, key] of styleMap.entries()) {\n      if (node.tagName === \"STYLE\") continue;\n      const className = keyToClass.get(key);\n      if (className) node.classList.add(className);\n      const bgImage = node.style?.backgroundImage;\n      node.removeAttribute(\"style\");\n      if (bgImage && bgImage !== \"none\") node.style.backgroundImage = bgImage;\n    }\n  } else {\n    for (const [node, key] of styleMap.entries()) {\n      if (node.tagName === \"STYLE\") continue;\n      node.setAttribute(\"style\", key.replace(/;/g, \"; \"));\n    }\n  }\n  for (const [cloneNode, originalNode] of nodeMap.entries()) {\n    const scrollX = originalNode.scrollLeft;\n    const scrollY = originalNode.scrollTop;\n    const hasScroll = scrollX || scrollY;\n    if (hasScroll && cloneNode instanceof HTMLElement) {\n      cloneNode.style.overflow = \"hidden\";\n      cloneNode.style.scrollbarWidth = \"none\";\n      cloneNode.style.msOverflowStyle = \"none\";\n      const inner = document.createElement(\"div\");\n      inner.style.transform = `translate(${-scrollX}px, ${-scrollY}px)`;\n      inner.style.willChange = \"transform\";\n      inner.style.display = \"inline-block\";\n      inner.style.width = \"100%\";\n      while (cloneNode.firstChild) {\n        inner.appendChild(cloneNode.firstChild);\n      }\n      cloneNode.appendChild(inner);\n    }\n  }\n  if (element === nodeMap.get(clone)) {\n    const computed = styleCache.get(element) || window.getComputedStyle(element);\n    styleCache.set(element, computed);\n    const transform = stripTranslate(computed.transform);\n    clone.style.margin = \"0\";\n    clone.style.position = \"static\";\n    clone.style.top = \"auto\";\n    clone.style.left = \"auto\";\n    clone.style.right = \"auto\";\n    clone.style.bottom = \"auto\";\n    clone.style.zIndex = \"auto\";\n    clone.style.float = \"none\";\n    clone.style.clear = \"none\";\n    clone.style.transform = transform || \"\";\n  }\n  return { clone, classCSS, styleCache };\n}\n\n// src/modules/images.js\nasync function inlineImages(clone, options = {}) {\n  const imgs = Array.from(clone.querySelectorAll(\"img\"));\n  const processImg = async (img) => {\n    const src = img.src;\n    try {\n      const crossOrigin = options.crossOrigin ? options.crossOrigin(src) : \"anonymous\";\n      const dataUrl = await fetchImage(src, 3e3, crossOrigin);\n      img.src = dataUrl;\n      if (!img.width) img.width = img.naturalWidth || 100;\n      if (!img.height) img.height = img.naturalHeight || 100;\n    } catch {\n      const fallback = document.createElement(\"div\");\n      fallback.style = `width: ${img.width || 100}px; height: ${img.height || 100}px; background: #ccc; display: inline-block; text-align: center; line-height: ${img.height || 100}px; color: #666; font-size: 12px;`;\n      fallback.innerText = \"img\";\n      img.replaceWith(fallback);\n    }\n  };\n  for (let i = 0; i < imgs.length; i += 4) {\n    const group = imgs.slice(i, i + 4).map(processImg);\n    await Promise.allSettled(group);\n  }\n}\n\n// src/modules/background.js\nasync function inlineBackgroundImages(source, clone, styleCache, options = {}) {\n  const queue = [[source, clone]];\n  while (queue.length) {\n    const [srcNode, cloneNode] = queue.shift();\n    const style = styleCache.get(srcNode) || getStyle(srcNode);\n    if (!styleCache.has(srcNode)) styleCache.set(srcNode, style);\n    const bg = style.getPropertyValue(\"background-image\");\n    const bgColor = style.getPropertyValue(\"background-color\");\n    if (!bg || bg === \"none\") {\n      const sChildren2 = Array.from(srcNode.children);\n      const cChildren2 = Array.from(cloneNode.children);\n      for (let i = 0; i < Math.min(sChildren2.length, cChildren2.length); i++) {\n        queue.push([sChildren2[i], cChildren2[i]]);\n      }\n      continue;\n    }\n    const bgSplits = splitBackgroundImage(bg);\n    const newBgParts = await Promise.all(\n      bgSplits.map((entry) => inlineSingleBackgroundEntry(entry, options))\n    );\n    const hasRealBg = newBgParts.some(\n      (p) => p && p !== \"none\" && !/^url\\(undefined\\)/.test(p)\n    );\n    if (hasRealBg) {\n      cloneNode.style.backgroundImage = newBgParts.join(\", \");\n    }\n    if (bgColor && bgColor !== \"transparent\" && bgColor !== \"rgba(0, 0, 0, 0)\") {\n      cloneNode.style.backgroundColor = bgColor;\n    }\n    const sChildren = Array.from(srcNode.children);\n    const cChildren = Array.from(cloneNode.children);\n    for (let i = 0; i < Math.min(sChildren.length, cChildren.length); i++) {\n      queue.push([sChildren[i], cChildren[i]]);\n    }\n  }\n}\n\n// src/core/capture.js\nasync function captureDOM(element, options = {}) {\n  if (!element) throw new Error(\"Element cannot be null or undefined\");\n  if (!(element instanceof Element)) throw new Error(\"captureDOM: Only Element nodes are supported\");\n  const { compress = true, embedFonts = false, fast = true, scale = 1 } = options;\n  let clone, classCSS, styleCache;\n  let fontsCSS = \"\";\n  let baseCSS = \"\";\n  let dataURL;\n  let svgString;\n  ({ clone, classCSS, styleCache } = await prepareClone(element, compress, embedFonts));\n  await new Promise((resolve) => {\n    idle(async () => {\n      await inlineImages(clone, options);\n      resolve();\n    }, { fast });\n  });\n  await new Promise((resolve) => {\n    idle(async () => {\n      await inlineBackgroundImages(element, clone, styleCache, options);\n      resolve();\n    }, { fast });\n  });\n  if (embedFonts) {\n    await new Promise((resolve) => {\n      idle(async () => {\n        fontsCSS = await embedCustomFonts({ ignoreIconFonts: !embedFonts });\n        resolve();\n      }, { fast });\n    });\n  }\n  if (compress) {\n    const usedTags = collectUsedTagNames(clone).sort();\n    const tagKey = usedTags.join(\",\");\n    if (baseCSSCache.has(tagKey)) {\n      baseCSS = baseCSSCache.get(tagKey);\n    } else {\n      await new Promise((resolve) => {\n        idle(() => {\n          baseCSS = generateDedupedBaseCSS(usedTags);\n          baseCSSCache.set(tagKey, baseCSS);\n          resolve();\n        }, { fast });\n      });\n    }\n  }\n  await new Promise((resolve) => {\n    idle(() => {\n      const rect = element.getBoundingClientRect();\n      let w = rect.width;\n      let h = rect.height;\n      const hasW = Number.isFinite(options.width);\n      const hasH = Number.isFinite(options.height);\n      const hasScale = typeof scale === \"number\" && scale !== 1;\n      if (!hasScale) {\n        const aspect = rect.width / rect.height;\n        if (hasW && hasH) {\n          w = options.width;\n          h = options.height;\n        } else if (hasW) {\n          w = options.width;\n          h = w / aspect;\n        } else if (hasH) {\n          h = options.height;\n          w = h * aspect;\n        }\n      }\n      w = Math.ceil(w);\n      h = Math.ceil(h);\n      clone.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n      clone.style.transformOrigin = \"top left\";\n      if (!hasScale && (hasW || hasH)) {\n        const originalW = rect.width;\n        const originalH = rect.height;\n        const scaleX = w / originalW;\n        const scaleY = h / originalH;\n        const existingTransform = clone.style.transform || \"\";\n        const scaleTransform = `scale(${scaleX}, ${scaleY})`;\n        clone.style.transform = `${scaleTransform} ${existingTransform}`.trim();\n      } else if (hasScale && isSafari()) {\n        clone.style.scale = `${scale}`;\n      }\n      const svgNS = \"http://www.w3.org/2000/svg\";\n      const fo = document.createElementNS(svgNS, \"foreignObject\");\n      fo.setAttribute(\"width\", \"100%\");\n      fo.setAttribute(\"height\", \"100%\");\n      const styleTag = document.createElement(\"style\");\n      styleTag.textContent = baseCSS + fontsCSS + \"svg{overflow:visible;}\" + classCSS;\n      fo.appendChild(styleTag);\n      fo.appendChild(clone);\n      const serializer = new XMLSerializer();\n      const foString = serializer.serializeToString(fo);\n      const svgHeader = `<svg xmlns=\"${svgNS}\" width=\"${w}\" height=\"${h}\" viewBox=\"0 0 ${w} ${h}\">`;\n      const svgFooter = \"</svg>\";\n      svgString = svgHeader + foString + svgFooter;\n      dataURL = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svgString)}`;\n      resolve();\n    }, { fast });\n  });\n  const sandbox = document.getElementById(\"snapdom-sandbox\");\n  if (sandbox && sandbox.style.position === \"absolute\") sandbox.remove();\n  return dataURL;\n}\n\n// src/api/snapdom.js\nasync function toImg(url, { dpr = 1, scale = 1 }) {\n  const img = new Image();\n  img.src = url;\n  await img.decode();\n  if (isSafari) {\n    img.width = img.width * scale;\n    img.height = img.height * scale;\n  } else {\n    img.width = img.width / scale;\n    img.height = img.height / scale;\n  }\n  return img;\n}\nasync function toCanvas(url, { dpr = 1, scale = 1 } = {}) {\n  const img = new Image();\n  img.src = url;\n  await img.decode();\n  const canvas = document.createElement(\"canvas\");\n  const width = img.width * scale;\n  const height = img.height * scale;\n  canvas.width = Math.ceil(width * dpr);\n  canvas.height = Math.ceil(height * dpr);\n  const ctx = canvas.getContext(\"2d\");\n  ctx.scale(dpr, dpr);\n  ctx.drawImage(img, 0, 0, width, height);\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  return canvas;\n}\nasync function toBlob(url) {\n  const svgText = decodeURIComponent(url.split(\",\")[1]);\n  return new Blob([svgText], { type: \"image/svg+xml\" });\n}\nasync function createBackground(url, { dpr = 1, scale = 1 }, backgroundColor) {\n  const baseCanvas = await toCanvas(url, { dpr, scale });\n  if (!backgroundColor) return baseCanvas;\n  const temp = document.createElement(\"canvas\");\n  temp.width = baseCanvas.width;\n  temp.height = baseCanvas.height;\n  const ctx = temp.getContext(\"2d\");\n  ctx.fillStyle = backgroundColor;\n  ctx.fillRect(0, 0, temp.width, temp.height);\n  ctx.drawImage(baseCanvas, 0, 0);\n  return temp;\n}\nasync function toRasterImg(url, { dpr = 1, scale = 1, backgroundColor = \"#fff\", quality }, format = \"png\") {\n  const canvas = await createBackground(url, { dpr, scale }, backgroundColor);\n  const img = new Image();\n  img.src = canvas.toDataURL(`image/${format}`, quality);\n  await img.decode();\n  img.style.width = `${canvas.width / dpr}px`;\n  img.style.height = `${canvas.height / dpr}px`;\n  return img;\n}\nasync function download(url, { dpr = 1, scale = 1, backgroundColor = \"#fff\", format = \"png\", filename = \"capture\" } = {}) {\n  if (format === \"svg\") {\n    const blob = await toBlob(url);\n    const objectURL = URL.createObjectURL(blob);\n    const a2 = document.createElement(\"a\");\n    a2.href = objectURL;\n    a2.download = `${filename}.svg`;\n    a2.click();\n    URL.revokeObjectURL(objectURL);\n    return;\n  }\n  const defaultBg = [\"jpg\", \"jpeg\", \"webp\"].includes(format) ? \"#fff\" : void 0;\n  const finalBg = backgroundColor ?? defaultBg;\n  const canvas = await createBackground(url, { dpr, scale }, finalBg);\n  const mime = {\n    jpg: \"image/jpeg\",\n    jpeg: \"image/jpeg\",\n    png: \"image/png\",\n    webp: \"image/webp\"\n  }[format] || \"image/png\";\n  const dataURL = canvas.toDataURL(mime);\n  const a = document.createElement(\"a\");\n  a.href = dataURL;\n  a.download = `${filename}.${format}`;\n  a.click();\n}\nasync function snapdom(element, options = {}) {\n  options = { scale: 1, ...options };\n  if (!element) throw new Error(\"Element cannot be null or undefined\");\n  return await snapdom.capture(element, options);\n}\nsnapdom.capture = async (el, options = {}) => {\n  const url = await captureDOM(el, options);\n  const dpr = window.devicePixelRatio || 1;\n  const scale = options.scale || 1;\n  return {\n    url,\n    options,\n    toRaw: () => url,\n    toImg: () => toImg(url, { dpr, scale }),\n    toCanvas: () => toCanvas(url, { dpr, scale }),\n    toBlob: () => toBlob(url),\n    toPng: (options2) => toRasterImg(url, { dpr, scale, ...options2 }, \"png\"),\n    toJpg: (options2) => toRasterImg(url, { dpr, scale, ...options2 }, \"jpeg\"),\n    toWebp: (options2) => toRasterImg(url, { dpr, scale, ...options2 }, \"webp\"),\n    download: ({ format = \"png\", filename = \"capture\", backgroundColor } = {}) => download(url, { dpr, scale, backgroundColor, format, filename })\n  };\n};\nsnapdom.toRaw = async (el, options) => (await snapdom.capture(el, options)).toRaw();\nsnapdom.toImg = async (el, options) => (await snapdom.capture(el, options)).toImg();\nsnapdom.toCanvas = async (el, options) => (await snapdom.capture(el, options)).toCanvas();\nsnapdom.toBlob = async (el, options) => (await snapdom.capture(el, options)).toBlob();\nsnapdom.toPng = async (el, options) => (await snapdom.capture(el, options)).toPng(options);\nsnapdom.toJpg = async (el, options) => (await snapdom.capture(el, options)).toJpg(options);\nsnapdom.toWebp = async (el, options) => (await snapdom.capture(el, options)).toWebp(options);\nsnapdom.download = async (el, options = {}) => {\n  const {\n    format = \"png\",\n    filename = \"capture\",\n    backgroundColor,\n    ...rest\n  } = options;\n  const capture = await snapdom.capture(el, rest);\n  return await capture.download({ format, filename, backgroundColor });\n};\n\n// src/api/preCache.js\nasync function preCache(root = document, options = {}) {\n  const { embedFonts = true, reset = false, crossOrigin: crossOriginFn } = options;\n  if (reset) {\n    imageCache.clear();\n    bgCache.clear();\n    resourceCache.clear();\n    baseCSSCache.clear();\n    return;\n  }\n  await document.fonts.ready;\n  precacheCommonTags();\n  let imgEls = [], allEls = [];\n  if (root?.querySelectorAll) {\n    imgEls = Array.from(root.querySelectorAll(\"img[src]\"));\n    allEls = Array.from(root.querySelectorAll(\"*\"));\n  }\n  const promises = [];\n  for (const img of imgEls) {\n    const src = img.src;\n    if (!imageCache.has(src)) {\n      const crossOrigin = crossOriginFn ? crossOriginFn(src) : \"anonymous\";\n      promises.push(\n        fetchImage(src, 3e3, crossOrigin).then((dataURL) => imageCache.set(src, dataURL)).catch(() => {\n        })\n      );\n    }\n  }\n  for (const el of allEls) {\n    const bg = getStyle(el).backgroundImage;\n    if (bg && bg !== \"none\") {\n      const bgSplits = splitBackgroundImage(bg);\n      for (const entry of bgSplits) {\n        const isUrl = entry.startsWith(\"url(\");\n        if (isUrl) {\n          promises.push(\n            inlineSingleBackgroundEntry(entry, { crossOrigin: crossOriginFn, skipInline: true }).catch(() => {\n            })\n          );\n        }\n      }\n    }\n  }\n  if (embedFonts) {\n    await embedCustomFonts({ ignoreIconFonts: !embedFonts, preCached: true });\n  }\n  await Promise.all(promises);\n}\nexport {\n  preCache,\n  snapdom\n};\n"],"names":["DEFAULT_ORIENTATION","ORIENTATIONS","Separator","React","props","forwardedRef","decorative","orientation","orientationProp","domProps","_objectWithoutProperties","_excluded","includes","isValidOrientation","semanticProps","role","jsx","Primitive","div","_objectSpread","ref","displayName","Root","imageCache","Map","bgCache","resourceCache","defaultStylesCache","baseCSSCache","computedStyleCache","WeakMap","processedFontURLs","Set","getDefaultStyleForTag","tagName","has","get","empty","set","sandbox","document","getElementById","createElement","id","style","position","left","top","width","height","overflow","body","appendChild","el","all","styles","getComputedStyle","defaults","prop","getPropertyValue","removeChild","getStyleKey","snapshot","compress","arguments","length","undefined","entries","defaultStyles","value","Object","defaultValue","push","concat","sort","join","async","inlineSingleBackgroundEntry","entry","options","isUrl","startsWith","test","rawUrl","extractURL","encodedUrl","safeEncodeURI","skipInline","crossOrigin","dataUrl","fetchImage","idle","fn","fast","window","requestIdleCallback","timeout","setTimeout","getStyle","pseudo","Element","map","st","parseContent","content","clean","replace","String","fromCharCode","parseInt","_unused","urlStart","indexOf","url","slice","trim","endsWith","isIconFont","familyOrUrl","some","rx","src","Promise","resolve","reject","timeoutId","Error","image","Image","onload","clearTimeout","decode","canvas","getContext","drawImage","dataURL","toDataURL","e","onerror","message","snapshotComputedStyle","snap","isSafari","navigator","userAgent","uri","newURI","decodeURI","encodeURI","_unused2","splitBackgroundImage","bg","parts","depth","lastIndex","i","char","inlineAllStyles","source","clone","styleMap","cache","_source$tagName","key","toLowerCase","deepClone","node","styleCache","nodeMap","nodeType","Node","ELEMENT_NODE","getAttribute","spacer","rect","getBoundingClientRect","cssText","fallback","textContent","offsetWidth","offsetHeight","clone2","cloneNode","placeholder","img","display","TEXT_NODE","_node$parentElement","parentElement","shadowRoot","tag","customElements","HTMLInputElement","setAttribute","checked","HTMLTextAreaElement","HTMLSelectElement","Array","from","forEach","opt","removeAttribute","frag","createDocumentFragment","childNodes","child","clonedChild","shadowContent","children","filter","Boolean","shadowFrag","iconToImage","unicodeChar","fontFamily","fontWeight","fontSize","color","dpr","devicePixelRatio","tempCtx","font","metrics","measureText","ascent","actualBoundingBoxAscent","actualBoundingBoxDescent","Math","ceil","ctx","scale","textAlign","textBaseline","fillStyle","fillText","isStylesheetLoaded","href","styleSheets","sheet","injectLinkIfMissing","link","rel","head","embedCustomFonts","ignoreIconFonts","preCached","importRegex","styleImports","styleTag","querySelectorAll","matches","matchAll","match","importUrl","links","finalCSS","res","fetch","text","urlRegex","inlinedCSS","URL","add","original","inlined","fontRes","blob","b64","reader","FileReader","result","readAsDataURL","console","warn","cssFinal","r","every","rule","cssRules","type","CSSRule","FONT_FACE_RULE","inlinedSrc","location","fonts","family","status","_snapdomSrc","weight","inlinePseudoElements","embedFonts","Symbol","iterator","normal","textNode","find","n","first","rest","span","dataset","snapdomPseudo","restNode","createTextNode","replaceChild","insertBefore","bgColor","hasBg","hasBgColor","pseudoEl","isIconFont2","cleanContent","imgEl","error","bgSplits","newBgParts","backgroundImage","backgroundColor","hasContent2","firstChild","sChildren","cChildren","min","prepareClone","element","classCSS","keyToClass","keySet","values","classMap","counter","generateCSSClasses","_ref2","className","_node$style","classList","bgImage","originalNode","scrollX","scrollLeft","scrollY","scrollTop","HTMLElement","scrollbarWidth","msOverflowStyle","inner","transform","willChange","computed","cleaned","_","split","s","stripTranslate","margin","right","bottom","zIndex","float","clear","captureDOM","svgString","fontsCSS","baseCSS","imgs","processImg","naturalWidth","naturalHeight","_unused3","innerText","replaceWith","group","allSettled","inlineImages","queue","srcNode","shift","sChildren2","cChildren2","p","inlineBackgroundImages","usedTags","root","tagSet","DOCUMENT_FRAGMENT_NODE","collectUsedTagNames","tagKey","usedTagNames","groups","_ref","k","v","css","styleBlock","tagList","generateDedupedBaseCSS","w","h","hasW","Number","isFinite","hasH","hasScale","aspect","transformOrigin","scaleX","scaleY","existingTransform","scaleTransform","svgNS","fo","createElementNS","foString","XMLSerializer","serializeToString","svgHeader","encodeURIComponent","remove","toCanvas","toBlob","svgText","decodeURIComponent","Blob","createBackground","_ref4","baseCanvas","temp","fillRect","toRasterImg","_ref5","quality","format","snapdom","capture","toRaw","toImg","_ref3","toPng","options2","toJpg","toWebp","download","filename","objectURL","createObjectURL","a2","click","revokeObjectURL","defaultBg","finalBg","mime","jpg","jpeg","png","webp","a"],"sourceRoot":""}