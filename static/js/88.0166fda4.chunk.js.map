{"version":3,"file":"static/js/88.0166fda4.chunk.js","mappings":"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","sources":["components/ui/card.jsx","components/ui/label.jsx","components/ui/textarea.jsx","utils/iso8583.js","pages/ISO8583Decoder.js","../node_modules/@radix-ui/react-label/src/label.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"src/lib/utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className)}\n    {...props} />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)}\n    {...props} />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props} />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"src/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\n\nimport { cn } from \"src/lib/utils\"\n\nconst Textarea = React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-input px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props} />\n  );\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","const iso8583_spec = {\n  2: { name: 'Primary Account Number (PAN)', type: 'LLVAR', length: 19, format: 'n' },\n  3: { name: 'Processing Code', type: 'FIXED', length: 6, format: 'n' },\n  4: { name: 'Transaction Amount', type: 'FIXED', length: 12, format: 'n' },\n  7: { name: 'Transmission Date and Time', type: 'FIXED', length: 10, format: 'n' },\n  11: { name: 'System Trace Audit Number (STAN)', type: 'FIXED', length: 6, format: 'n' },\n  12: { name: 'Local Transaction Time', type: 'FIXED', length: 6, format: 'n' },\n  13: { name: 'Local Transaction Date', type: 'FIXED', length: 4, format: 'n' },\n  15: { name: 'Settlement Date', type: 'FIXED', length: 4, format: 'n' },\n  22: { name: 'Point of Service Entry Mode', type: 'FIXED', length: 3, format: 'n' },\n  37: { name: 'Retrieval Reference Number', type: 'FIXED', length: 12, format: 'an' },\n  39: { name: 'Response Code', type: 'FIXED', length: 2, format: 'an' },\n  41: { name: 'Card Acceptor Terminal Identification', type: 'FIXED', length: 8, format: 'ans' },\n  42: { name: 'Card Acceptor Identification Code', type: 'FIXED', length: 15, format: 'ans' },\n  49: { name: 'Transaction Currency Code', type: 'FIXED', length: 3, format: 'n' },\n  52: { name: 'Personal Identification Number (PIN) Data', type: 'FIXED', length: 16, format: 'b' },\n  53: { name: 'Security Related Control Information', type: 'FIXED', length: 16, format: 'n' },\n  62: { name: 'Issuer Private Data', type: 'LLLVAR', length: 999, format: 'ans' },\n  128: { name: 'Message Authentication Code (MAC)', type: 'FIXED', length: 16, format: 'b' },\n};\n\nfunction hexToBinary(hex) {\n  return hex.split('').map(i => parseInt(i, 16).toString(2).padStart(4, '0')).join('');\n}\n\nfunction hexToAscii(hex) {\n  let ascii = '';\n  for (let i = 0; i < hex.length; i += 2) {\n    ascii += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return ascii;\n}\n\nexport function decodeISO8583(hex) {\n  if (!/^[0-9A-Fa-f]*$/.test(hex) || hex.length % 2 !== 0) {\n    throw new Error(\"Invalid hex string. Must contain only hex characters and have an even length.\");\n  }\n\n  let offset = 0;\n  const decoded = {};\n\n  // MTI\n  decoded.mti = hexToAscii(hex.substring(offset, offset + 8));\n  offset += 8;\n\n  // Bitmap\n  const primaryBitmapHex = hex.substring(offset, offset + 16);\n  offset += 16;\n  const primaryBitmapBinary = hexToBinary(primaryBitmapHex);\n\n  let fullBitmapBinary = primaryBitmapBinary;\n  let presentFields = [];\n\n  if (primaryBitmapBinary[0] === '1') {\n    // Secondary bitmap is present\n    const secondaryBitmapHex = hex.substring(offset, offset + 16);\n    offset += 16;\n    const secondaryBitmapBinary = hexToBinary(secondaryBitmapHex);\n    fullBitmapBinary += secondaryBitmapBinary;\n  }\n\n  for (let i = 0; i < fullBitmapBinary.length; i++) {\n    if (fullBitmapBinary[i] === '1') {\n      presentFields.push(i + 1);\n    }\n  }\n\n  decoded.fields = {};\n  decoded.presentFields = presentFields;\n\n  // Data Fields\n  for (const field of presentFields) {\n    if (field === 1) continue; // Skip bitmap field\n    const spec = iso8583_spec[field];\n    if (!spec) {\n        // For fields not in our simplified spec, we can't decode them\n        // We will mark them as present but not decoded\n        decoded.fields[field] = { name: `Field ${field}`, value: 'Unknown spec', raw_value: '' };\n        continue;\n    }\n\n    let value = '';\n    let raw_value = '';\n    let len = 0;\n\n    if (spec.type === 'FIXED') {\n      len = spec.length;\n      const dataHex = hex.substring(offset, offset + len);\n      raw_value = dataHex;\n      if (spec.format === 'n') {\n        value = dataHex;\n      } else {\n        value = hexToAscii(dataHex);\n      }\n      offset += len;\n    } else if (spec.type === 'LLVAR') {\n      const lenHex = hex.substring(offset, offset + 2);\n      len = parseInt(lenHex, 10);\n      offset += 2;\n      const dataHex = hex.substring(offset, offset + len);\n      raw_value = dataHex;\n      if (spec.format === 'n') {\n        value = dataHex;\n      } else {\n        value = hexToAscii(dataHex);\n      }\n      offset += len;\n    } else if (spec.type === 'LLLVAR') {\n        const lenHex = hex.substring(offset, offset + 3);\n        len = parseInt(lenHex, 10);\n        offset += 3;\n        const dataHex = hex.substring(offset, offset + len);\n        raw_value = dataHex;\n        if (spec.format === 'n') {\n          value = dataHex;\n        } else {\n          value = hexToAscii(dataHex);\n        }\n        offset += len;\n    }\n\n    decoded.fields[field] = { name: spec.name, value, raw_value };\n  }\n\n  return decoded;\n}\n","import React, { useState } from 'react';\nimport { Button } from '../components/ui/button';\nimport { Textarea } from '../components/ui/textarea';\nimport { Label } from '../components/ui/label';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '../components/ui/card';\nimport { decodeISO8583 } from '../utils/iso8583';\n\nfunction ISO8583Decoder() {\n  const [hexInput, setHexInput] = useState('');\n  const [decodedMessage, setDecodedMessage] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleDecode = () => {\n    setError(null);\n    setDecodedMessage(null);\n\n    try {\n      const decoded = decodeISO8583(hexInput.replace(/\\s/g, ''));\n      setDecodedMessage(decoded);\n    } catch (e) {\n      setError('Error decoding message: ' + e.message);\n    }\n  };\n\n  const handleClear = () => {\n    setHexInput('');\n    setDecodedMessage(null);\n    setError(null);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>ISO 8583 Decoder</CardTitle>\n        <CardDescription>Decode a hex ISO 8583 message into a human-readable format.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"hex-input\">Hex ISO 8583 Message</Label>\n          <Textarea\n            id=\"hex-input\"\n            value={hexInput}\n            onChange={(e) => setHexInput(e.target.value)}\n            placeholder=\"Enter hex-encoded ISO 8583 message\"\n            className=\"h-32\"\n          />\n        </div>\n        <div className=\"flex justify-center space-x-4\">\n          <Button onClick={handleDecode}>Decode</Button>\n          <Button onClick={handleClear} variant=\"ghost\">\n            Clear\n          </Button>\n        </div>\n        {error && <p className=\"text-red-500 text-sm\">Error: {error}</p>}\n        {decodedMessage && (\n          <div className=\"space-y-2\">\n            <Label>Decoded Message</Label>\n            <div className=\"rounded-md border\">\n              <table className=\"w-full text-sm\">\n                <tbody>\n                  <tr className=\"border-b\">\n                    <td className=\"p-2 font-medium\">MTI</td>\n                    <td className=\"p-2\">{decodedMessage.mti}</td>\n                  </tr>\n                  {Object.entries(decodedMessage.fields).map(([field, data]) => (\n                    <tr key={field} className=\"border-b\">\n                      <td className=\"p-2 font-medium\">Field {field}</td>\n                      <td className=\"p-2\">{data.name}</td>\n                      <td className=\"p-2\">{data.value}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ISO8583Decoder;\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ComponentRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":["Card","React","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","cn","displayName","CardHeader","_ref2","_excluded2","CardTitle","_ref3","_excluded3","CardDescription","_ref4","_excluded4","CardContent","_ref5","_excluded5","CardFooter","_ref6","_excluded6","labelVariants","cva","Label","LabelPrimitive","Textarea","iso8583_spec","name","type","length","format","hexToBinary","hex","split","map","i","parseInt","toString","padStart","join","hexToAscii","ascii","String","fromCharCode","substr","hexInput","setHexInput","useState","decodedMessage","setDecodedMessage","error","setError","_jsxs","children","htmlFor","id","value","onChange","e","target","placeholder","Button","onClick","handleDecode","decoded","test","Error","offset","mti","substring","primaryBitmapHex","primaryBitmapBinary","fullBitmapBinary","presentFields","secondaryBitmapHex","push","fields","field","spec","concat","raw_value","len","dataHex","lenHex","decodeISO8583","replace","message","handleClear","variant","Object","entries","data","forwardedRef","jsx","Primitive","label","onMouseDown","event","_props$onMouseDown","closest","call","defaultPrevented","detail","preventDefault","Root"],"sourceRoot":""}